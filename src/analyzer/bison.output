Terminals which are not used

   IntLiteral
   DoubleLiteral
   BoolLiteral
   Statement
   GT
   LT
   GE
   LE
   COMMENT_ONE_LINE


Grammar

    0 $accept: fragment $end

    1 fragment: statementList

    2 statementList: statement
    3              | statementList statement

    4 statement: expression SEMI
    5          | assignStatement
    6          | declareStatement
    7          | ifStatement
    8          | forStatement
    9          | funcDefStatement
   10          | funcCallStatement

   11 assignStatement: IDENTIFIER EQ expression SEMI

   12 declareStatement: dataType IDENTIFIER SEMI
   13                 | dataType IDENTIFIER EQ expression SEMI

   14 ifStatement: IF expression LCB statementList RCB

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI

   19 parameterDefList: parameterDef
   20                 | parameterDefList parameterDef

   21 parameterDef: INT IDENTIFIER
   22             | INT IDENTIFIER COMMA

   23 parameterList: parameter
   24              | parameterList parameter

   25 parameter: IDENTIFIER
   26          | IDENTIFIER COMMA

   27 rangeExpression: expression RANGE_UNCLOSE expression
   28                | expression RANGE_CLOSE expression

   29 expression: term
   30           | expression ADD term
   31           | expression SUB term

   32 term: primaryExpression
   33     | term POWER primaryExpression
   34     | term MUL primaryExpression
   35     | term DIV primaryExpression
   36     | term MOD primaryExpression

   37 primaryExpression: Literal
   38                  | IDENTIFIER
   39                  | LB expression RB

   40 dataType: INT
   41         | DOUBLE
   42         | BOOL
   43         | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
IntLiteral (258)
DoubleLiteral (259)
BoolLiteral (260)
IDENTIFIER (261) 11 12 13 15 16 17 18 21 22 25 26 38
Literal (262) 37
Statement (263)
EQ (264) 11 13
INT (265) 21 22 40
DOUBLE (266) 41
BOOL (267) 42
STRING (268) 43
SEMI (269) 4 11 12 13 18
COMMA (270) 22 26
COLON (271) 17
IF (272) 14
FOR (273) 15
FUNC (274) 16 17
ADD (275) 30
SUB (276) 31
MUL (277) 34
DIV (278) 35
MOD (279) 36
POWER (280) 33
LB (281) 16 17 18 39
RB (282) 16 17 18 39
LCB (283) 14 15 16 17
RCB (284) 14 15 16 17
GT (285)
LT (286)
GE (287)
LE (288)
RANGE_UNCLOSE (289) 27
RANGE_CLOSE (290) 28
IN (291) 15
COMMENT_ONE_LINE (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
fragment (39)
    on left: 1, on right: 0
statementList (40)
    on left: 2 3, on right: 1 3 14 15 16 17
statement (41)
    on left: 4 5 6 7 8 9 10, on right: 2 3
assignStatement (42)
    on left: 11, on right: 5
declareStatement (43)
    on left: 12 13, on right: 6
ifStatement (44)
    on left: 14, on right: 7
forStatement (45)
    on left: 15, on right: 8
funcDefStatement (46)
    on left: 16 17, on right: 9
funcCallStatement (47)
    on left: 18, on right: 10
parameterDefList (48)
    on left: 19 20, on right: 17 20
parameterDef (49)
    on left: 21 22, on right: 19 20
parameterList (50)
    on left: 23 24, on right: 16 18 24
parameter (51)
    on left: 25 26, on right: 23 24
rangeExpression (52)
    on left: 27 28, on right: 15
expression (53)
    on left: 29 30 31, on right: 4 11 13 14 27 28 30 31 39
term (54)
    on left: 32 33 34 35 36, on right: 29 30 31 33 34 35 36
primaryExpression (55)
    on left: 37 38 39, on right: 32 33 34 35 36
dataType (56)
    on left: 40 41 42 43, on right: 12 13 17


state 0

    0 $accept: . fragment $end

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    fragment           go to state 11
    statementList      go to state 12
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 1

   11 assignStatement: IDENTIFIER . EQ expression SEMI
   18 funcCallStatement: IDENTIFIER . LB parameterList RB SEMI
   38 primaryExpression: IDENTIFIER .

    EQ  shift, and go to state 24
    LB  shift, and go to state 25

    $default  reduce using rule 38 (primaryExpression)


state 2

   37 primaryExpression: Literal .

    $default  reduce using rule 37 (primaryExpression)


state 3

   40 dataType: INT .

    $default  reduce using rule 40 (dataType)


state 4

   41 dataType: DOUBLE .

    $default  reduce using rule 41 (dataType)


state 5

   42 dataType: BOOL .

    $default  reduce using rule 42 (dataType)


state 6

   43 dataType: STRING .

    $default  reduce using rule 43 (dataType)


state 7

   14 ifStatement: IF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 27
    term               go to state 21
    primaryExpression  go to state 22


state 8

   15 forStatement: FOR . IDENTIFIER IN rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 28


state 9

   16 funcDefStatement: FUNC . IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC . IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 29


state 10

   39 primaryExpression: LB . expression RB

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 30
    term               go to state 21
    primaryExpression  go to state 22


state 11

    0 $accept: fragment . $end

    $end  shift, and go to state 31


state 12

    1 fragment: statementList .
    3 statementList: statementList . statement

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    $default  reduce using rule 1 (fragment)

    statement          go to state 32
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 13

    2 statementList: statement .

    $default  reduce using rule 2 (statementList)


state 14

    5 statement: assignStatement .

    $default  reduce using rule 5 (statement)


state 15

    6 statement: declareStatement .

    $default  reduce using rule 6 (statement)


state 16

    7 statement: ifStatement .

    $default  reduce using rule 7 (statement)


state 17

    8 statement: forStatement .

    $default  reduce using rule 8 (statement)


state 18

    9 statement: funcDefStatement .

    $default  reduce using rule 9 (statement)


state 19

   10 statement: funcCallStatement .

    $default  reduce using rule 10 (statement)


state 20

    4 statement: expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 33
    ADD   shift, and go to state 34
    SUB   shift, and go to state 35


state 21

   29 expression: term .
   33 term: term . POWER primaryExpression
   34     | term . MUL primaryExpression
   35     | term . DIV primaryExpression
   36     | term . MOD primaryExpression

    MUL    shift, and go to state 36
    DIV    shift, and go to state 37
    MOD    shift, and go to state 38
    POWER  shift, and go to state 39

    $default  reduce using rule 29 (expression)


state 22

   32 term: primaryExpression .

    $default  reduce using rule 32 (term)


state 23

   12 declareStatement: dataType . IDENTIFIER SEMI
   13                 | dataType . IDENTIFIER EQ expression SEMI

    IDENTIFIER  shift, and go to state 40


state 24

   11 assignStatement: IDENTIFIER EQ . expression SEMI

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 41
    term               go to state 21
    primaryExpression  go to state 22


state 25

   18 funcCallStatement: IDENTIFIER LB . parameterList RB SEMI

    IDENTIFIER  shift, and go to state 42

    parameterList  go to state 43
    parameter      go to state 44


state 26

   38 primaryExpression: IDENTIFIER .

    $default  reduce using rule 38 (primaryExpression)


state 27

   14 ifStatement: IF expression . LCB statementList RCB
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 34
    SUB  shift, and go to state 35
    LCB  shift, and go to state 45


state 28

   15 forStatement: FOR IDENTIFIER . IN rangeExpression LCB statementList RCB

    IN  shift, and go to state 46


state 29

   16 funcDefStatement: FUNC IDENTIFIER . LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER . LB parameterDefList RB COLON dataType LCB statementList RCB

    LB  shift, and go to state 47


state 30

   30 expression: expression . ADD term
   31           | expression . SUB term
   39 primaryExpression: LB expression . RB

    ADD  shift, and go to state 34
    SUB  shift, and go to state 35
    RB   shift, and go to state 48


state 31

    0 $accept: fragment $end .

    $default  accept


state 32

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 33

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


state 34

   30 expression: expression ADD . term

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    term               go to state 49
    primaryExpression  go to state 22


state 35

   31 expression: expression SUB . term

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    term               go to state 50
    primaryExpression  go to state 22


state 36

   34 term: term MUL . primaryExpression

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    primaryExpression  go to state 51


state 37

   35 term: term DIV . primaryExpression

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    primaryExpression  go to state 52


state 38

   36 term: term MOD . primaryExpression

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    primaryExpression  go to state 53


state 39

   33 term: term POWER . primaryExpression

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    primaryExpression  go to state 54


state 40

   12 declareStatement: dataType IDENTIFIER . SEMI
   13                 | dataType IDENTIFIER . EQ expression SEMI

    EQ    shift, and go to state 55
    SEMI  shift, and go to state 56


state 41

   11 assignStatement: IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 57
    ADD   shift, and go to state 34
    SUB   shift, and go to state 35


state 42

   25 parameter: IDENTIFIER .
   26          | IDENTIFIER . COMMA

    COMMA  shift, and go to state 58

    $default  reduce using rule 25 (parameter)


state 43

   18 funcCallStatement: IDENTIFIER LB parameterList . RB SEMI
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 42
    RB          shift, and go to state 59

    parameter  go to state 60


state 44

   23 parameterList: parameter .

    $default  reduce using rule 23 (parameterList)


state 45

   14 ifStatement: IF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 61
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 46

   15 forStatement: FOR IDENTIFIER IN . rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    rangeExpression    go to state 62
    expression         go to state 63
    term               go to state 21
    primaryExpression  go to state 22


state 47

   16 funcDefStatement: FUNC IDENTIFIER LB . parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB . parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 42
    INT         shift, and go to state 64

    parameterDefList  go to state 65
    parameterDef      go to state 66
    parameterList     go to state 67
    parameter         go to state 44


state 48

   39 primaryExpression: LB expression RB .

    $default  reduce using rule 39 (primaryExpression)


state 49

   30 expression: expression ADD term .
   33 term: term . POWER primaryExpression
   34     | term . MUL primaryExpression
   35     | term . DIV primaryExpression
   36     | term . MOD primaryExpression

    MUL    shift, and go to state 36
    DIV    shift, and go to state 37
    MOD    shift, and go to state 38
    POWER  shift, and go to state 39

    $default  reduce using rule 30 (expression)


state 50

   31 expression: expression SUB term .
   33 term: term . POWER primaryExpression
   34     | term . MUL primaryExpression
   35     | term . DIV primaryExpression
   36     | term . MOD primaryExpression

    MUL    shift, and go to state 36
    DIV    shift, and go to state 37
    MOD    shift, and go to state 38
    POWER  shift, and go to state 39

    $default  reduce using rule 31 (expression)


state 51

   34 term: term MUL primaryExpression .

    $default  reduce using rule 34 (term)


state 52

   35 term: term DIV primaryExpression .

    $default  reduce using rule 35 (term)


state 53

   36 term: term MOD primaryExpression .

    $default  reduce using rule 36 (term)


state 54

   33 term: term POWER primaryExpression .

    $default  reduce using rule 33 (term)


state 55

   13 declareStatement: dataType IDENTIFIER EQ . expression SEMI

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 68
    term               go to state 21
    primaryExpression  go to state 22


state 56

   12 declareStatement: dataType IDENTIFIER SEMI .

    $default  reduce using rule 12 (declareStatement)


state 57

   11 assignStatement: IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 11 (assignStatement)


state 58

   26 parameter: IDENTIFIER COMMA .

    $default  reduce using rule 26 (parameter)


state 59

   18 funcCallStatement: IDENTIFIER LB parameterList RB . SEMI

    SEMI  shift, and go to state 69


state 60

   24 parameterList: parameterList parameter .

    $default  reduce using rule 24 (parameterList)


state 61

    3 statementList: statementList . statement
   14 ifStatement: IF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 70

    statement          go to state 32
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 62

   15 forStatement: FOR IDENTIFIER IN rangeExpression . LCB statementList RCB

    LCB  shift, and go to state 71


state 63

   27 rangeExpression: expression . RANGE_UNCLOSE expression
   28                | expression . RANGE_CLOSE expression
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD            shift, and go to state 34
    SUB            shift, and go to state 35
    RANGE_UNCLOSE  shift, and go to state 72
    RANGE_CLOSE    shift, and go to state 73


state 64

   21 parameterDef: INT . IDENTIFIER
   22             | INT . IDENTIFIER COMMA

    IDENTIFIER  shift, and go to state 74


state 65

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList . RB COLON dataType LCB statementList RCB
   20 parameterDefList: parameterDefList . parameterDef

    INT  shift, and go to state 64
    RB   shift, and go to state 75

    parameterDef  go to state 76


state 66

   19 parameterDefList: parameterDef .

    $default  reduce using rule 19 (parameterDefList)


state 67

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList . RB LCB statementList RCB
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 42
    RB          shift, and go to state 77

    parameter  go to state 60


state 68

   13 declareStatement: dataType IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 78
    ADD   shift, and go to state 34
    SUB   shift, and go to state 35


state 69

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI .

    $default  reduce using rule 18 (funcCallStatement)


state 70

   14 ifStatement: IF expression LCB statementList RCB .

    $default  reduce using rule 14 (ifStatement)


state 71

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 79
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 72

   27 rangeExpression: expression RANGE_UNCLOSE . expression

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 80
    term               go to state 21
    primaryExpression  go to state 22


state 73

   28 rangeExpression: expression RANGE_CLOSE . expression

    IDENTIFIER  shift, and go to state 26
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 81
    term               go to state 21
    primaryExpression  go to state 22


state 74

   21 parameterDef: INT IDENTIFIER .
   22             | INT IDENTIFIER . COMMA

    COMMA  shift, and go to state 82

    $default  reduce using rule 21 (parameterDef)


state 75

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB . COLON dataType LCB statementList RCB

    COLON  shift, and go to state 83


state 76

   20 parameterDefList: parameterDefList parameterDef .

    $default  reduce using rule 20 (parameterDefList)


state 77

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB . LCB statementList RCB

    LCB  shift, and go to state 84


state 78

   13 declareStatement: dataType IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 13 (declareStatement)


state 79

    3 statementList: statementList . statement
   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 85

    statement          go to state 32
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 80

   27 rangeExpression: expression RANGE_UNCLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 34
    SUB  shift, and go to state 35

    $default  reduce using rule 27 (rangeExpression)


state 81

   28 rangeExpression: expression RANGE_CLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 34
    SUB  shift, and go to state 35

    $default  reduce using rule 28 (rangeExpression)


state 82

   22 parameterDef: INT IDENTIFIER COMMA .

    $default  reduce using rule 22 (parameterDef)


state 83

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON . dataType LCB statementList RCB

    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6

    dataType  go to state 86


state 84

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 87
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 85

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB .

    $default  reduce using rule 15 (forStatement)


state 86

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType . LCB statementList RCB

    LCB  shift, and go to state 88


state 87

    3 statementList: statementList . statement
   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 89

    statement          go to state 32
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 88

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 90
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 89

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB .

    $default  reduce using rule 16 (funcDefStatement)


state 90

    3 statementList: statementList . statement
   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 91

    statement          go to state 32
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    term               go to state 21
    primaryExpression  go to state 22
    dataType           go to state 23


state 91

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB .

    $default  reduce using rule 17 (funcDefStatement)
