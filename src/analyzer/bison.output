Terminals which are not used

   IntLiteral
   DoubleLiteral
   BoolLiteral
   Statement
   GT
   LT
   GE
   LE
   COMMENT_ONE_LINE


Grammar

    0 $accept: fragment $end

    1 fragment: statementList

    2 statementList: statement
    3              | statementList statement

    4 statement: expression SEMI
    5          | assignStatement
    6          | declareStatement
    7          | ifStatement
    8          | forStatement
    9          | funcDefStatement
   10          | funcCallStatement

   11 assignStatement: IDENTIFIER EQ expression SEMI

   12 declareStatement: dataType IDENTIFIER SEMI
   13                 | dataType IDENTIFIER EQ expression SEMI

   14 ifStatement: IF expression LCB statementList RCB

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI

   19 parameterDefList: parameterDef
   20                 | parameterDefList parameterDef

   21 parameterDef: INT IDENTIFIER
   22             | INT IDENTIFIER COMMA

   23 parameterList: parameter
   24              | parameterList parameter

   25 parameter: IDENTIFIER
   26          | IDENTIFIER COMMA

   27 rangeExpression: expression RANGE_UNCLOSE expression
   28                | expression RANGE_CLOSE expression

   29 expression: term
   30           | expression ADD term
   31           | expression SUB term

   32 term: primaryExpression
   33     | term POWER primaryExpression
   34     | term MUL primaryExpression
   35     | term DIV primaryExpression
   36     | term MOD primaryExpression

   37 primaryExpression: Literal
   38                  | IDENTIFIER
   39                  | LB expression RB

   40 dataType: INT
   41         | DOUBLE
   42         | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
IntLiteral (258)
DoubleLiteral (259)
BoolLiteral (260)
IDENTIFIER (261) 11 12 13 15 16 17 18 21 22 25 26 38
Literal (262) 37
Statement (263)
EQ (264) 11 13
INT (265) 21 22 40
DOUBLE (266) 41
BOOL (267) 42
SEMI (268) 4 11 12 13 18
COMMA (269) 22 26
COLON (270) 17
IF (271) 14
FOR (272) 15
FUNC (273) 16 17
ADD (274) 30
SUB (275) 31
MUL (276) 34
DIV (277) 35
MOD (278) 36
POWER (279) 33
LB (280) 16 17 18 39
RB (281) 16 17 18 39
LCB (282) 14 15 16 17
RCB (283) 14 15 16 17
GT (284)
LT (285)
GE (286)
LE (287)
RANGE_UNCLOSE (288) 27
RANGE_CLOSE (289) 28
IN (290) 15
COMMENT_ONE_LINE (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
fragment (38)
    on left: 1, on right: 0
statementList (39)
    on left: 2 3, on right: 1 3 14 15 16 17
statement (40)
    on left: 4 5 6 7 8 9 10, on right: 2 3
assignStatement (41)
    on left: 11, on right: 5
declareStatement (42)
    on left: 12 13, on right: 6
ifStatement (43)
    on left: 14, on right: 7
forStatement (44)
    on left: 15, on right: 8
funcDefStatement (45)
    on left: 16 17, on right: 9
funcCallStatement (46)
    on left: 18, on right: 10
parameterDefList (47)
    on left: 19 20, on right: 17 20
parameterDef (48)
    on left: 21 22, on right: 19 20
parameterList (49)
    on left: 23 24, on right: 16 18 24
parameter (50)
    on left: 25 26, on right: 23 24
rangeExpression (51)
    on left: 27 28, on right: 15
expression (52)
    on left: 29 30 31, on right: 4 11 13 14 27 28 30 31 39
term (53)
    on left: 32 33 34 35 36, on right: 29 30 31 33 34 35 36
primaryExpression (54)
    on left: 37 38 39, on right: 32 33 34 35 36
dataType (55)
    on left: 40 41 42, on right: 12 13 17


state 0

    0 $accept: . fragment $end

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    fragment           go to state 10
    statementList      go to state 11
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 1

   11 assignStatement: IDENTIFIER . EQ expression SEMI
   18 funcCallStatement: IDENTIFIER . LB parameterList RB SEMI
   38 primaryExpression: IDENTIFIER .

    EQ  shift, and go to state 23
    LB  shift, and go to state 24

    $default  reduce using rule 38 (primaryExpression)


state 2

   37 primaryExpression: Literal .

    $default  reduce using rule 37 (primaryExpression)


state 3

   40 dataType: INT .

    $default  reduce using rule 40 (dataType)


state 4

   41 dataType: DOUBLE .

    $default  reduce using rule 41 (dataType)


state 5

   42 dataType: BOOL .

    $default  reduce using rule 42 (dataType)


state 6

   14 ifStatement: IF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 26
    term               go to state 20
    primaryExpression  go to state 21


state 7

   15 forStatement: FOR . IDENTIFIER IN rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 27


state 8

   16 funcDefStatement: FUNC . IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC . IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 28


state 9

   39 primaryExpression: LB . expression RB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 29
    term               go to state 20
    primaryExpression  go to state 21


state 10

    0 $accept: fragment . $end

    $end  shift, and go to state 30


state 11

    1 fragment: statementList .
    3 statementList: statementList . statement

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    $default  reduce using rule 1 (fragment)

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 12

    2 statementList: statement .

    $default  reduce using rule 2 (statementList)


state 13

    5 statement: assignStatement .

    $default  reduce using rule 5 (statement)


state 14

    6 statement: declareStatement .

    $default  reduce using rule 6 (statement)


state 15

    7 statement: ifStatement .

    $default  reduce using rule 7 (statement)


state 16

    8 statement: forStatement .

    $default  reduce using rule 8 (statement)


state 17

    9 statement: funcDefStatement .

    $default  reduce using rule 9 (statement)


state 18

   10 statement: funcCallStatement .

    $default  reduce using rule 10 (statement)


state 19

    4 statement: expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 32
    ADD   shift, and go to state 33
    SUB   shift, and go to state 34


state 20

   29 expression: term .
   33 term: term . POWER primaryExpression
   34     | term . MUL primaryExpression
   35     | term . DIV primaryExpression
   36     | term . MOD primaryExpression

    MUL    shift, and go to state 35
    DIV    shift, and go to state 36
    MOD    shift, and go to state 37
    POWER  shift, and go to state 38

    $default  reduce using rule 29 (expression)


state 21

   32 term: primaryExpression .

    $default  reduce using rule 32 (term)


state 22

   12 declareStatement: dataType . IDENTIFIER SEMI
   13                 | dataType . IDENTIFIER EQ expression SEMI

    IDENTIFIER  shift, and go to state 39


state 23

   11 assignStatement: IDENTIFIER EQ . expression SEMI

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 40
    term               go to state 20
    primaryExpression  go to state 21


state 24

   18 funcCallStatement: IDENTIFIER LB . parameterList RB SEMI

    IDENTIFIER  shift, and go to state 41

    parameterList  go to state 42
    parameter      go to state 43


state 25

   38 primaryExpression: IDENTIFIER .

    $default  reduce using rule 38 (primaryExpression)


state 26

   14 ifStatement: IF expression . LCB statementList RCB
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34
    LCB  shift, and go to state 44


state 27

   15 forStatement: FOR IDENTIFIER . IN rangeExpression LCB statementList RCB

    IN  shift, and go to state 45


state 28

   16 funcDefStatement: FUNC IDENTIFIER . LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER . LB parameterDefList RB COLON dataType LCB statementList RCB

    LB  shift, and go to state 46


state 29

   30 expression: expression . ADD term
   31           | expression . SUB term
   39 primaryExpression: LB expression . RB

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34
    RB   shift, and go to state 47


state 30

    0 $accept: fragment $end .

    $default  accept


state 31

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 32

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


state 33

   30 expression: expression ADD . term

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    term               go to state 48
    primaryExpression  go to state 21


state 34

   31 expression: expression SUB . term

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    term               go to state 49
    primaryExpression  go to state 21


state 35

   34 term: term MUL . primaryExpression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    primaryExpression  go to state 50


state 36

   35 term: term DIV . primaryExpression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    primaryExpression  go to state 51


state 37

   36 term: term MOD . primaryExpression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    primaryExpression  go to state 52


state 38

   33 term: term POWER . primaryExpression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    primaryExpression  go to state 53


state 39

   12 declareStatement: dataType IDENTIFIER . SEMI
   13                 | dataType IDENTIFIER . EQ expression SEMI

    EQ    shift, and go to state 54
    SEMI  shift, and go to state 55


state 40

   11 assignStatement: IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 56
    ADD   shift, and go to state 33
    SUB   shift, and go to state 34


state 41

   25 parameter: IDENTIFIER .
   26          | IDENTIFIER . COMMA

    COMMA  shift, and go to state 57

    $default  reduce using rule 25 (parameter)


state 42

   18 funcCallStatement: IDENTIFIER LB parameterList . RB SEMI
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 41
    RB          shift, and go to state 58

    parameter  go to state 59


state 43

   23 parameterList: parameter .

    $default  reduce using rule 23 (parameterList)


state 44

   14 ifStatement: IF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 60
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 45

   15 forStatement: FOR IDENTIFIER IN . rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    rangeExpression    go to state 61
    expression         go to state 62
    term               go to state 20
    primaryExpression  go to state 21


state 46

   16 funcDefStatement: FUNC IDENTIFIER LB . parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB . parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 41
    INT         shift, and go to state 63

    parameterDefList  go to state 64
    parameterDef      go to state 65
    parameterList     go to state 66
    parameter         go to state 43


state 47

   39 primaryExpression: LB expression RB .

    $default  reduce using rule 39 (primaryExpression)


state 48

   30 expression: expression ADD term .
   33 term: term . POWER primaryExpression
   34     | term . MUL primaryExpression
   35     | term . DIV primaryExpression
   36     | term . MOD primaryExpression

    MUL    shift, and go to state 35
    DIV    shift, and go to state 36
    MOD    shift, and go to state 37
    POWER  shift, and go to state 38

    $default  reduce using rule 30 (expression)


state 49

   31 expression: expression SUB term .
   33 term: term . POWER primaryExpression
   34     | term . MUL primaryExpression
   35     | term . DIV primaryExpression
   36     | term . MOD primaryExpression

    MUL    shift, and go to state 35
    DIV    shift, and go to state 36
    MOD    shift, and go to state 37
    POWER  shift, and go to state 38

    $default  reduce using rule 31 (expression)


state 50

   34 term: term MUL primaryExpression .

    $default  reduce using rule 34 (term)


state 51

   35 term: term DIV primaryExpression .

    $default  reduce using rule 35 (term)


state 52

   36 term: term MOD primaryExpression .

    $default  reduce using rule 36 (term)


state 53

   33 term: term POWER primaryExpression .

    $default  reduce using rule 33 (term)


state 54

   13 declareStatement: dataType IDENTIFIER EQ . expression SEMI

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 67
    term               go to state 20
    primaryExpression  go to state 21


state 55

   12 declareStatement: dataType IDENTIFIER SEMI .

    $default  reduce using rule 12 (declareStatement)


state 56

   11 assignStatement: IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 11 (assignStatement)


state 57

   26 parameter: IDENTIFIER COMMA .

    $default  reduce using rule 26 (parameter)


state 58

   18 funcCallStatement: IDENTIFIER LB parameterList RB . SEMI

    SEMI  shift, and go to state 68


state 59

   24 parameterList: parameterList parameter .

    $default  reduce using rule 24 (parameterList)


state 60

    3 statementList: statementList . statement
   14 ifStatement: IF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 69

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 61

   15 forStatement: FOR IDENTIFIER IN rangeExpression . LCB statementList RCB

    LCB  shift, and go to state 70


state 62

   27 rangeExpression: expression . RANGE_UNCLOSE expression
   28                | expression . RANGE_CLOSE expression
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD            shift, and go to state 33
    SUB            shift, and go to state 34
    RANGE_UNCLOSE  shift, and go to state 71
    RANGE_CLOSE    shift, and go to state 72


state 63

   21 parameterDef: INT . IDENTIFIER
   22             | INT . IDENTIFIER COMMA

    IDENTIFIER  shift, and go to state 73


state 64

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList . RB COLON dataType LCB statementList RCB
   20 parameterDefList: parameterDefList . parameterDef

    INT  shift, and go to state 63
    RB   shift, and go to state 74

    parameterDef  go to state 75


state 65

   19 parameterDefList: parameterDef .

    $default  reduce using rule 19 (parameterDefList)


state 66

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList . RB LCB statementList RCB
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 41
    RB          shift, and go to state 76

    parameter  go to state 59


state 67

   13 declareStatement: dataType IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 77
    ADD   shift, and go to state 33
    SUB   shift, and go to state 34


state 68

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI .

    $default  reduce using rule 18 (funcCallStatement)


state 69

   14 ifStatement: IF expression LCB statementList RCB .

    $default  reduce using rule 14 (ifStatement)


state 70

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 78
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 71

   27 rangeExpression: expression RANGE_UNCLOSE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 79
    term               go to state 20
    primaryExpression  go to state 21


state 72

   28 rangeExpression: expression RANGE_CLOSE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 80
    term               go to state 20
    primaryExpression  go to state 21


state 73

   21 parameterDef: INT IDENTIFIER .
   22             | INT IDENTIFIER . COMMA

    COMMA  shift, and go to state 81

    $default  reduce using rule 21 (parameterDef)


state 74

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB . COLON dataType LCB statementList RCB

    COLON  shift, and go to state 82


state 75

   20 parameterDefList: parameterDefList parameterDef .

    $default  reduce using rule 20 (parameterDefList)


state 76

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB . LCB statementList RCB

    LCB  shift, and go to state 83


state 77

   13 declareStatement: dataType IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 13 (declareStatement)


state 78

    3 statementList: statementList . statement
   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 84

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 79

   27 rangeExpression: expression RANGE_UNCLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34

    $default  reduce using rule 27 (rangeExpression)


state 80

   28 rangeExpression: expression RANGE_CLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34

    $default  reduce using rule 28 (rangeExpression)


state 81

   22 parameterDef: INT IDENTIFIER COMMA .

    $default  reduce using rule 22 (parameterDef)


state 82

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON . dataType LCB statementList RCB

    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    BOOL    shift, and go to state 5

    dataType  go to state 85


state 83

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 86
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 84

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB .

    $default  reduce using rule 15 (forStatement)


state 85

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType . LCB statementList RCB

    LCB  shift, and go to state 87


state 86

    3 statementList: statementList . statement
   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 88

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 87

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 89
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 88

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB .

    $default  reduce using rule 16 (funcDefStatement)


state 89

    3 statementList: statementList . statement
   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 90

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 90

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB .

    $default  reduce using rule 17 (funcDefStatement)
