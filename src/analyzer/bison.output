Terminals which are not used

   IntLiteral
   DoubleLiteral
   BoolLiteral
   BinaryOperator
   Statement
   List
   COMMENT_ONE_LINE


Grammar

    0 $accept: fragment $end

    1 fragment: statementList

    2 statementList: statement
    3              | statementList statement

    4 statement: expression SEMI
    5          | assignStatement
    6          | declareStatement
    7          | ifStatement
    8          | forStatement
    9          | funcDefStatement
   10          | funcCallStatement

   11 assignStatement: IDENTIFIER ASSIGN expression SEMI

   12 declareStatement: dataType IDENTIFIER SEMI
   13                 | dataType IDENTIFIER ASSIGN expression SEMI

   14 ifStatement: IF expression LCB statementList RCB

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI

   19 parameterDefList: parameterDef
   20                 | parameterDefList parameterDef

   21 parameterDef: INT IDENTIFIER
   22             | INT IDENTIFIER COMMA

   23 parameterList: parameter
   24              | parameterList parameter

   25 parameter: IDENTIFIER
   26          | IDENTIFIER COMMA

   27 rangeExpression: expression RANGE_UNCLOSE expression
   28                | expression RANGE_CLOSE expression

   29 expression: primaryExpression
   30           | expression ADD expression
   31           | expression SUB expression
   32           | expression MUL expression
   33           | expression DIV expression
   34           | expression MOD expression
   35           | expression POWER expression
   36           | expression EQ expression
   37           | expression GT expression
   38           | expression GE expression
   39           | expression LT expression
   40           | expression LE expression

   41 primaryExpression: Literal
   42                  | IDENTIFIER
   43                  | LB expression RB

   44 dataType: INT
   45         | DOUBLE
   46         | BOOL
   47         | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
IntLiteral (258)
DoubleLiteral (259)
BoolLiteral (260)
IDENTIFIER (261) 11 12 13 15 16 17 18 21 22 25 26 42
Literal (262) 41
BinaryOperator (263)
ADD (264) 30
SUB (265) 31
MUL (266) 32
DIV (267) 33
MOD (268) 34
POWER (269) 35
EQ (270) 36
GT (271) 37
LT (272) 39
GE (273) 38
LE (274) 40
Statement (275)
List (276)
ASSIGN (277) 11 13
INT (278) 21 22 44
DOUBLE (279) 45
BOOL (280) 46
STRING (281) 47
SEMI (282) 4 11 12 13 18
COMMA (283) 22 26
COLON (284) 17
IF (285) 14
FOR (286) 15
FUNC (287) 16 17
LB (288) 16 17 18 43
RB (289) 16 17 18 43
LCB (290) 14 15 16 17
RCB (291) 14 15 16 17
RANGE_UNCLOSE (292) 27
RANGE_CLOSE (293) 28
IN (294) 15
COMMENT_ONE_LINE (295)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
fragment (42)
    on left: 1, on right: 0
statementList (43)
    on left: 2 3, on right: 1 3 14 15 16 17
statement (44)
    on left: 4 5 6 7 8 9 10, on right: 2 3
assignStatement (45)
    on left: 11, on right: 5
declareStatement (46)
    on left: 12 13, on right: 6
ifStatement (47)
    on left: 14, on right: 7
forStatement (48)
    on left: 15, on right: 8
funcDefStatement (49)
    on left: 16 17, on right: 9
funcCallStatement (50)
    on left: 18, on right: 10
parameterDefList (51)
    on left: 19 20, on right: 17 20
parameterDef (52)
    on left: 21 22, on right: 19 20
parameterList (53)
    on left: 23 24, on right: 16 18 24
parameter (54)
    on left: 25 26, on right: 23 24
rangeExpression (55)
    on left: 27 28, on right: 15
expression (56)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40, on right: 4 11 13
    14 27 28 30 31 32 33 34 35 36 37 38 39 40 43
primaryExpression (57)
    on left: 41 42 43, on right: 29
dataType (58)
    on left: 44 45 46 47, on right: 12 13 17


state 0

    0 $accept: . fragment $end

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    fragment           go to state 11
    statementList      go to state 12
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 1

   11 assignStatement: IDENTIFIER . ASSIGN expression SEMI
   18 funcCallStatement: IDENTIFIER . LB parameterList RB SEMI
   42 primaryExpression: IDENTIFIER .

    ASSIGN  shift, and go to state 23
    LB      shift, and go to state 24

    $default  reduce using rule 42 (primaryExpression)


state 2

   41 primaryExpression: Literal .

    $default  reduce using rule 41 (primaryExpression)


state 3

   44 dataType: INT .

    $default  reduce using rule 44 (dataType)


state 4

   45 dataType: DOUBLE .

    $default  reduce using rule 45 (dataType)


state 5

   46 dataType: BOOL .

    $default  reduce using rule 46 (dataType)


state 6

   47 dataType: STRING .

    $default  reduce using rule 47 (dataType)


state 7

   14 ifStatement: IF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 26
    primaryExpression  go to state 21


state 8

   15 forStatement: FOR . IDENTIFIER IN rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 27


state 9

   16 funcDefStatement: FUNC . IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC . IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 28


state 10

   43 primaryExpression: LB . expression RB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 29
    primaryExpression  go to state 21


state 11

    0 $accept: fragment . $end

    $end  shift, and go to state 30


state 12

    1 fragment: statementList .
    3 statementList: statementList . statement

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    $default  reduce using rule 1 (fragment)

    statement          go to state 31
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 13

    2 statementList: statement .

    $default  reduce using rule 2 (statementList)


state 14

    5 statement: assignStatement .

    $default  reduce using rule 5 (statement)


state 15

    6 statement: declareStatement .

    $default  reduce using rule 6 (statement)


state 16

    7 statement: ifStatement .

    $default  reduce using rule 7 (statement)


state 17

    8 statement: forStatement .

    $default  reduce using rule 8 (statement)


state 18

    9 statement: funcDefStatement .

    $default  reduce using rule 9 (statement)


state 19

   10 statement: funcCallStatement .

    $default  reduce using rule 10 (statement)


state 20

    4 statement: expression . SEMI
   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37
    EQ     shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    GE     shift, and go to state 41
    LE     shift, and go to state 42
    SEMI   shift, and go to state 43


state 21

   29 expression: primaryExpression .

    $default  reduce using rule 29 (expression)


state 22

   12 declareStatement: dataType . IDENTIFIER SEMI
   13                 | dataType . IDENTIFIER ASSIGN expression SEMI

    IDENTIFIER  shift, and go to state 44


state 23

   11 assignStatement: IDENTIFIER ASSIGN . expression SEMI

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 45
    primaryExpression  go to state 21


state 24

   18 funcCallStatement: IDENTIFIER LB . parameterList RB SEMI

    IDENTIFIER  shift, and go to state 46

    parameterList  go to state 47
    parameter      go to state 48


state 25

   42 primaryExpression: IDENTIFIER .

    $default  reduce using rule 42 (primaryExpression)


state 26

   14 ifStatement: IF expression . LCB statementList RCB
   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37
    EQ     shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    GE     shift, and go to state 41
    LE     shift, and go to state 42
    LCB    shift, and go to state 49


state 27

   15 forStatement: FOR IDENTIFIER . IN rangeExpression LCB statementList RCB

    IN  shift, and go to state 50


state 28

   16 funcDefStatement: FUNC IDENTIFIER . LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER . LB parameterDefList RB COLON dataType LCB statementList RCB

    LB  shift, and go to state 51


state 29

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression
   43 primaryExpression: LB expression . RB

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37
    EQ     shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    GE     shift, and go to state 41
    LE     shift, and go to state 42
    RB     shift, and go to state 52


state 30

    0 $accept: fragment $end .

    $default  accept


state 31

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 32

   30 expression: expression ADD . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 53
    primaryExpression  go to state 21


state 33

   31 expression: expression SUB . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 54
    primaryExpression  go to state 21


state 34

   32 expression: expression MUL . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 55
    primaryExpression  go to state 21


state 35

   33 expression: expression DIV . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 56
    primaryExpression  go to state 21


state 36

   34 expression: expression MOD . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 57
    primaryExpression  go to state 21


state 37

   35 expression: expression POWER . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 58
    primaryExpression  go to state 21


state 38

   36 expression: expression EQ . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 59
    primaryExpression  go to state 21


state 39

   37 expression: expression GT . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 60
    primaryExpression  go to state 21


state 40

   39 expression: expression LT . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 61
    primaryExpression  go to state 21


state 41

   38 expression: expression GE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 62
    primaryExpression  go to state 21


state 42

   40 expression: expression LE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 63
    primaryExpression  go to state 21


state 43

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


state 44

   12 declareStatement: dataType IDENTIFIER . SEMI
   13                 | dataType IDENTIFIER . ASSIGN expression SEMI

    ASSIGN  shift, and go to state 64
    SEMI    shift, and go to state 65


state 45

   11 assignStatement: IDENTIFIER ASSIGN expression . SEMI
   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37
    EQ     shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    GE     shift, and go to state 41
    LE     shift, and go to state 42
    SEMI   shift, and go to state 66


state 46

   25 parameter: IDENTIFIER .
   26          | IDENTIFIER . COMMA

    COMMA  shift, and go to state 67

    $default  reduce using rule 25 (parameter)


state 47

   18 funcCallStatement: IDENTIFIER LB parameterList . RB SEMI
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 46
    RB          shift, and go to state 68

    parameter  go to state 69


state 48

   23 parameterList: parameter .

    $default  reduce using rule 23 (parameterList)


state 49

   14 ifStatement: IF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 70
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 50

   15 forStatement: FOR IDENTIFIER IN . rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    rangeExpression    go to state 71
    expression         go to state 72
    primaryExpression  go to state 21


state 51

   16 funcDefStatement: FUNC IDENTIFIER LB . parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB . parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 46
    INT         shift, and go to state 73

    parameterDefList  go to state 74
    parameterDef      go to state 75
    parameterList     go to state 76
    parameter         go to state 48


state 52

   43 primaryExpression: LB expression RB .

    $default  reduce using rule 43 (primaryExpression)


state 53

   30 expression: expression . ADD expression
   30           | expression ADD expression .
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37

    $default  reduce using rule 30 (expression)


state 54

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   31           | expression SUB expression .
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37

    $default  reduce using rule 31 (expression)


state 55

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   32           | expression MUL expression .
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    POWER  shift, and go to state 37

    $default  reduce using rule 32 (expression)


state 56

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   33           | expression DIV expression .
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    POWER  shift, and go to state 37

    $default  reduce using rule 33 (expression)


state 57

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   34           | expression MOD expression .
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    POWER  shift, and go to state 37

    $default  reduce using rule 34 (expression)


state 58

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   35           | expression POWER expression .
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    POWER  shift, and go to state 37

    $default  reduce using rule 35 (expression)


state 59

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   36           | expression EQ expression .
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37

    $default  reduce using rule 36 (expression)


state 60

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   37           | expression GT expression .
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37

    $default  reduce using rule 37 (expression)


state 61

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   39           | expression LT expression .
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37

    $default  reduce using rule 39 (expression)


state 62

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   38           | expression GE expression .
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37

    $default  reduce using rule 38 (expression)


state 63

   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression
   40           | expression LE expression .

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37

    $default  reduce using rule 40 (expression)


state 64

   13 declareStatement: dataType IDENTIFIER ASSIGN . expression SEMI

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 77
    primaryExpression  go to state 21


state 65

   12 declareStatement: dataType IDENTIFIER SEMI .

    $default  reduce using rule 12 (declareStatement)


state 66

   11 assignStatement: IDENTIFIER ASSIGN expression SEMI .

    $default  reduce using rule 11 (assignStatement)


state 67

   26 parameter: IDENTIFIER COMMA .

    $default  reduce using rule 26 (parameter)


state 68

   18 funcCallStatement: IDENTIFIER LB parameterList RB . SEMI

    SEMI  shift, and go to state 78


state 69

   24 parameterList: parameterList parameter .

    $default  reduce using rule 24 (parameterList)


state 70

    3 statementList: statementList . statement
   14 ifStatement: IF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 79

    statement          go to state 31
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 71

   15 forStatement: FOR IDENTIFIER IN rangeExpression . LCB statementList RCB

    LCB  shift, and go to state 80


state 72

   27 rangeExpression: expression . RANGE_UNCLOSE expression
   28                | expression . RANGE_CLOSE expression
   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD            shift, and go to state 32
    SUB            shift, and go to state 33
    MUL            shift, and go to state 34
    DIV            shift, and go to state 35
    MOD            shift, and go to state 36
    POWER          shift, and go to state 37
    EQ             shift, and go to state 38
    GT             shift, and go to state 39
    LT             shift, and go to state 40
    GE             shift, and go to state 41
    LE             shift, and go to state 42
    RANGE_UNCLOSE  shift, and go to state 81
    RANGE_CLOSE    shift, and go to state 82


state 73

   21 parameterDef: INT . IDENTIFIER
   22             | INT . IDENTIFIER COMMA

    IDENTIFIER  shift, and go to state 83


state 74

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList . RB COLON dataType LCB statementList RCB
   20 parameterDefList: parameterDefList . parameterDef

    INT  shift, and go to state 73
    RB   shift, and go to state 84

    parameterDef  go to state 85


state 75

   19 parameterDefList: parameterDef .

    $default  reduce using rule 19 (parameterDefList)


state 76

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList . RB LCB statementList RCB
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 46
    RB          shift, and go to state 86

    parameter  go to state 69


state 77

   13 declareStatement: dataType IDENTIFIER ASSIGN expression . SEMI
   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37
    EQ     shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    GE     shift, and go to state 41
    LE     shift, and go to state 42
    SEMI   shift, and go to state 87


state 78

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI .

    $default  reduce using rule 18 (funcCallStatement)


state 79

   14 ifStatement: IF expression LCB statementList RCB .

    $default  reduce using rule 14 (ifStatement)


state 80

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 88
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 81

   27 rangeExpression: expression RANGE_UNCLOSE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 89
    primaryExpression  go to state 21


state 82

   28 rangeExpression: expression RANGE_CLOSE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 10

    expression         go to state 90
    primaryExpression  go to state 21


state 83

   21 parameterDef: INT IDENTIFIER .
   22             | INT IDENTIFIER . COMMA

    COMMA  shift, and go to state 91

    $default  reduce using rule 21 (parameterDef)


state 84

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB . COLON dataType LCB statementList RCB

    COLON  shift, and go to state 92


state 85

   20 parameterDefList: parameterDefList parameterDef .

    $default  reduce using rule 20 (parameterDefList)


state 86

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB . LCB statementList RCB

    LCB  shift, and go to state 93


state 87

   13 declareStatement: dataType IDENTIFIER ASSIGN expression SEMI .

    $default  reduce using rule 13 (declareStatement)


state 88

    3 statementList: statementList . statement
   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 94

    statement          go to state 31
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 89

   27 rangeExpression: expression RANGE_UNCLOSE expression .
   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37
    EQ     shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    GE     shift, and go to state 41
    LE     shift, and go to state 42

    $default  reduce using rule 27 (rangeExpression)


state 90

   28 rangeExpression: expression RANGE_CLOSE expression .
   30 expression: expression . ADD expression
   31           | expression . SUB expression
   32           | expression . MUL expression
   33           | expression . DIV expression
   34           | expression . MOD expression
   35           | expression . POWER expression
   36           | expression . EQ expression
   37           | expression . GT expression
   38           | expression . GE expression
   39           | expression . LT expression
   40           | expression . LE expression

    ADD    shift, and go to state 32
    SUB    shift, and go to state 33
    MUL    shift, and go to state 34
    DIV    shift, and go to state 35
    MOD    shift, and go to state 36
    POWER  shift, and go to state 37
    EQ     shift, and go to state 38
    GT     shift, and go to state 39
    LT     shift, and go to state 40
    GE     shift, and go to state 41
    LE     shift, and go to state 42

    $default  reduce using rule 28 (rangeExpression)


state 91

   22 parameterDef: INT IDENTIFIER COMMA .

    $default  reduce using rule 22 (parameterDef)


state 92

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON . dataType LCB statementList RCB

    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6

    dataType  go to state 95


state 93

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 96
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 94

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB .

    $default  reduce using rule 15 (forStatement)


state 95

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType . LCB statementList RCB

    LCB  shift, and go to state 97


state 96

    3 statementList: statementList . statement
   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 98

    statement          go to state 31
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 97

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10

    statementList      go to state 99
    statement          go to state 13
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 98

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB .

    $default  reduce using rule 16 (funcDefStatement)


state 99

    3 statementList: statementList . statement
   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    STRING      shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    FUNC        shift, and go to state 9
    LB          shift, and go to state 10
    RCB         shift, and go to state 100

    statement          go to state 31
    assignStatement    go to state 14
    declareStatement   go to state 15
    ifStatement        go to state 16
    forStatement       go to state 17
    funcDefStatement   go to state 18
    funcCallStatement  go to state 19
    expression         go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 100

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB .

    $default  reduce using rule 17 (funcDefStatement)
