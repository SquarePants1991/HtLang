Terminals unused in grammar

   IntLiteral
   DoubleLiteral
   BoolLiteral
   BinaryOperator
   Statement
   List
   COMMENT_ONE_LINE


Grammar

    0 $accept: fragment $end

    1 fragment: statementList

    2 statementList: statement
    3              | statementList statement

    4 statement: expression SEMI
    5          | assignStatement
    6          | declareStatement
    7          | ifStatement
    8          | forStatement
    9          | whileStatement
   10          | funcDefStatement
   11          | returnStatement
   12          | breakStatement
   13          | continueStatement

   14 assignStatement: IDENTIFIER ASSIGN expression SEMI

   15 declareStatement: dataType IDENTIFIER SEMI
   16                 | dataType IDENTIFIER ASSIGN expression SEMI

   17 ifStatement: pureIfStatement
   18            | ifStatement elifStatement
   19            | ifStatement elseStatement

   20 pureIfStatement: IF expression LCB statementList RCB

   21 elifStatement: ELIF expression LCB statementList RCB

   22 elseStatement: ELSE LCB statementList RCB

   23 forStatement: FOR IDENTIFIER IN expression LCB statementList RCB

   24 whileStatement: WHILE expression LCB statementList RCB

   25 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB statementList RCB
   26                 | FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

   27 returnStatement: RETURN expression SEMI

   28 breakStatement: BREAK SEMI

   29 continueStatement: CONTINUE SEMI

   30 parameterDefList: parameterDef
   31                 | parameterDefList parameterDef

   32 parameterDef: dataType IDENTIFIER
   33             | dataType IDENTIFIER COMMA

   34 parameterList: expression
   35              | parameterList COMMA expression

   36 expression: primaryExpression
   37           | expression RANGE_UNCLOSE expression
   38           | expression RANGE_CLOSE expression
   39           | expression ADD expression
   40           | expression SUB expression
   41           | expression MUL expression
   42           | expression DIV expression
   43           | expression MOD expression
   44           | expression POWER expression
   45           | expression NEQ expression
   46           | expression EQ expression
   47           | expression GT expression
   48           | expression GE expression
   49           | expression LT expression
   50           | expression LE expression
   51           | expression AND expression
   52           | expression OR expression
   53           | SUB expression
   54           | primaryExpression LB parameterList RB

   55 primaryExpression: Literal
   56                  | arrayLiteral
   57                  | dictLiteral
   58                  | IDENTIFIER

   59 arrayLiteral: LSB parameterList RSB

   60 pairList: pair
   61         | pairList pair

   62 pair: expression COLON expression
   63     | expression COLON expression COMMA

   64 dictLiteral: LSB pairList RSB

   65 dataType: INT
   66         | DOUBLE
   67         | BOOL
   68         | STRING
   69         | ARRAY


Terminals, with rules where they appear

$end (0) 0
error (256)
IntLiteral (258)
DoubleLiteral (259)
BoolLiteral (260)
IDENTIFIER (261) 14 15 16 23 25 26 32 33 58
Literal (262) 55
BinaryOperator (263)
ADD (264) 39
SUB (265) 40 53
MUL (266) 41
DIV (267) 42
MOD (268) 43
POWER (269) 44
EQ (270) 46
NEQ (271) 45
GT (272) 47
LT (273) 49
GE (274) 48
LE (275) 50
AND (276) 51
OR (277) 52
Statement (278)
List (279)
ASSIGN (280) 14 16
INT (281) 65
DOUBLE (282) 66
BOOL (283) 67
STRING (284) 68
ARRAY (285) 69
SEMI (286) 4 14 15 16 27 28 29
COMMA (287) 33 35 63
COLON (288) 26 62 63
IF (289) 20
ELIF (290) 21
ELSE (291) 22
FOR (292) 23
FUNC (293) 25 26
RETURN (294) 27
WHILE (295) 24
BREAK (296) 28
CONTINUE (297) 29
LB (298) 25 26 54
RB (299) 25 26 54
LCB (300) 20 21 22 23 24 25 26
RCB (301) 20 21 22 23 24 25 26
LSB (302) 59 64
RSB (303) 59 64
RANGE_UNCLOSE (304) 37
RANGE_CLOSE (305) 38
IN (306) 23
COMMENT_ONE_LINE (307)
NEGATIVE (308)
BRACE (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
fragment (56)
    on left: 1, on right: 0
statementList (57)
    on left: 2 3, on right: 1 3 20 21 22 23 24 25 26
statement (58)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3
assignStatement (59)
    on left: 14, on right: 5
declareStatement (60)
    on left: 15 16, on right: 6
ifStatement (61)
    on left: 17 18 19, on right: 7 18 19
pureIfStatement (62)
    on left: 20, on right: 17
elifStatement (63)
    on left: 21, on right: 18
elseStatement (64)
    on left: 22, on right: 19
forStatement (65)
    on left: 23, on right: 8
whileStatement (66)
    on left: 24, on right: 9
funcDefStatement (67)
    on left: 25 26, on right: 10
returnStatement (68)
    on left: 27, on right: 11
breakStatement (69)
    on left: 28, on right: 12
continueStatement (70)
    on left: 29, on right: 13
parameterDefList (71)
    on left: 30 31, on right: 25 26 31
parameterDef (72)
    on left: 32 33, on right: 30 31
parameterList (73)
    on left: 34 35, on right: 35 54 59
expression (74)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 4 14 16 20 21 23 24 27 34 35 37 38 39 40 41 42 43
    44 45 46 47 48 49 50 51 52 53 62 63
primaryExpression (75)
    on left: 55 56 57 58, on right: 36 54
arrayLiteral (76)
    on left: 59, on right: 56
pairList (77)
    on left: 60 61, on right: 61 64
pair (78)
    on left: 62 63, on right: 60 61
dictLiteral (79)
    on left: 64, on right: 57
dataType (80)
    on left: 65 66 67 68 69, on right: 15 16 26 32 33


State 0

    0 $accept: . fragment $end

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    fragment           go to state 17
    statementList      go to state 18
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 1

   14 assignStatement: IDENTIFIER . ASSIGN expression SEMI
   58 primaryExpression: IDENTIFIER .

    ASSIGN  shift, and go to state 35

    $default  reduce using rule 58 (primaryExpression)


State 2

   55 primaryExpression: Literal .

    $default  reduce using rule 55 (primaryExpression)


State 3

   53 expression: SUB . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 37
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 4

   65 dataType: INT .

    $default  reduce using rule 65 (dataType)


State 5

   66 dataType: DOUBLE .

    $default  reduce using rule 66 (dataType)


State 6

   67 dataType: BOOL .

    $default  reduce using rule 67 (dataType)


State 7

   68 dataType: STRING .

    $default  reduce using rule 68 (dataType)


State 8

   69 dataType: ARRAY .

    $default  reduce using rule 69 (dataType)


State 9

   20 pureIfStatement: IF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 38
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 10

   23 forStatement: FOR . IDENTIFIER IN expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 39


State 11

   25 funcDefStatement: FUNC . IDENTIFIER LB parameterDefList RB LCB statementList RCB
   26                 | FUNC . IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 40


State 12

   27 returnStatement: RETURN . expression SEMI

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 41
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 13

   24 whileStatement: WHILE . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 42
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 14

   28 breakStatement: BREAK . SEMI

    SEMI  shift, and go to state 43


State 15

   29 continueStatement: CONTINUE . SEMI

    SEMI  shift, and go to state 44


State 16

   59 arrayLiteral: LSB . parameterList RSB
   64 dictLiteral: LSB . pairList RSB

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    parameterList      go to state 45
    expression         go to state 46
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    pairList           go to state 47
    pair               go to state 48
    dictLiteral        go to state 33


State 17

    0 $accept: fragment . $end

    $end  shift, and go to state 49


State 18

    1 fragment: statementList .
    3 statementList: statementList . statement

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    $default  reduce using rule 1 (fragment)

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 19

    2 statementList: statement .

    $default  reduce using rule 2 (statementList)


State 20

    5 statement: assignStatement .

    $default  reduce using rule 5 (statement)


State 21

    6 statement: declareStatement .

    $default  reduce using rule 6 (statement)


State 22

    7 statement: ifStatement .
   18 ifStatement: ifStatement . elifStatement
   19            | ifStatement . elseStatement

    ELIF  shift, and go to state 51
    ELSE  shift, and go to state 52

    $default  reduce using rule 7 (statement)

    elifStatement  go to state 53
    elseStatement  go to state 54


State 23

   17 ifStatement: pureIfStatement .

    $default  reduce using rule 17 (ifStatement)


State 24

    8 statement: forStatement .

    $default  reduce using rule 8 (statement)


State 25

    9 statement: whileStatement .

    $default  reduce using rule 9 (statement)


State 26

   10 statement: funcDefStatement .

    $default  reduce using rule 10 (statement)


State 27

   11 statement: returnStatement .

    $default  reduce using rule 11 (statement)


State 28

   12 statement: breakStatement .

    $default  reduce using rule 12 (statement)


State 29

   13 statement: continueStatement .

    $default  reduce using rule 13 (statement)


State 30

    4 statement: expression . SEMI
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    SEMI           shift, and go to state 69
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 31

   36 expression: primaryExpression .
   54           | primaryExpression . LB parameterList RB

    LB  shift, and go to state 72

    $default  reduce using rule 36 (expression)


State 32

   56 primaryExpression: arrayLiteral .

    $default  reduce using rule 56 (primaryExpression)


State 33

   57 primaryExpression: dictLiteral .

    $default  reduce using rule 57 (primaryExpression)


State 34

   15 declareStatement: dataType . IDENTIFIER SEMI
   16                 | dataType . IDENTIFIER ASSIGN expression SEMI

    IDENTIFIER  shift, and go to state 73


State 35

   14 assignStatement: IDENTIFIER ASSIGN . expression SEMI

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 74
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 36

   58 primaryExpression: IDENTIFIER .

    $default  reduce using rule 58 (primaryExpression)


State 37

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression
   53           | SUB expression .

    POWER  shift, and go to state 60

    $default  reduce using rule 53 (expression)


State 38

   20 pureIfStatement: IF expression . LCB statementList RCB
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    LCB            shift, and go to state 75
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 39

   23 forStatement: FOR IDENTIFIER . IN expression LCB statementList RCB

    IN  shift, and go to state 76


State 40

   25 funcDefStatement: FUNC IDENTIFIER . LB parameterDefList RB LCB statementList RCB
   26                 | FUNC IDENTIFIER . LB parameterDefList RB COLON dataType LCB statementList RCB

    LB  shift, and go to state 77


State 41

   27 returnStatement: RETURN expression . SEMI
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    SEMI           shift, and go to state 78
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 42

   24 whileStatement: WHILE expression . LCB statementList RCB
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    LCB            shift, and go to state 79
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 43

   28 breakStatement: BREAK SEMI .

    $default  reduce using rule 28 (breakStatement)


State 44

   29 continueStatement: CONTINUE SEMI .

    $default  reduce using rule 29 (continueStatement)


State 45

   35 parameterList: parameterList . COMMA expression
   59 arrayLiteral: LSB parameterList . RSB

    COMMA  shift, and go to state 80
    RSB    shift, and go to state 81


State 46

   34 parameterList: expression .
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression
   62 pair: expression . COLON expression
   63     | expression . COLON expression COMMA

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    COLON          shift, and go to state 82
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71

    $default  reduce using rule 34 (parameterList)


State 47

   61 pairList: pairList . pair
   64 dictLiteral: LSB pairList . RSB

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16
    RSB         shift, and go to state 83

    expression         go to state 84
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    pair               go to state 85
    dictLiteral        go to state 33


State 48

   60 pairList: pair .

    $default  reduce using rule 60 (pairList)


State 49

    0 $accept: fragment $end .

    $default  accept


State 50

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


State 51

   21 elifStatement: ELIF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 86
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 52

   22 elseStatement: ELSE . LCB statementList RCB

    LCB  shift, and go to state 87


State 53

   18 ifStatement: ifStatement elifStatement .

    $default  reduce using rule 18 (ifStatement)


State 54

   19 ifStatement: ifStatement elseStatement .

    $default  reduce using rule 19 (ifStatement)


State 55

   39 expression: expression ADD . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 88
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 56

   40 expression: expression SUB . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 89
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 57

   41 expression: expression MUL . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 90
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 58

   42 expression: expression DIV . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 91
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 59

   43 expression: expression MOD . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 92
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 60

   44 expression: expression POWER . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 93
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 61

   46 expression: expression EQ . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 94
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 62

   45 expression: expression NEQ . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 95
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 63

   47 expression: expression GT . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 96
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 64

   49 expression: expression LT . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 97
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 65

   48 expression: expression GE . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 98
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 66

   50 expression: expression LE . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 99
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 67

   51 expression: expression AND . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 100
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 68

   52 expression: expression OR . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 101
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 69

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


State 70

   37 expression: expression RANGE_UNCLOSE . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 102
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 71

   38 expression: expression RANGE_CLOSE . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 103
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 72

   54 expression: primaryExpression LB . parameterList RB

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    parameterList      go to state 104
    expression         go to state 105
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 73

   15 declareStatement: dataType IDENTIFIER . SEMI
   16                 | dataType IDENTIFIER . ASSIGN expression SEMI

    ASSIGN  shift, and go to state 106
    SEMI    shift, and go to state 107


State 74

   14 assignStatement: IDENTIFIER ASSIGN expression . SEMI
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    SEMI           shift, and go to state 108
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 75

   20 pureIfStatement: IF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    statementList      go to state 109
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 76

   23 forStatement: FOR IDENTIFIER IN . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 110
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 77

   25 funcDefStatement: FUNC IDENTIFIER LB . parameterDefList RB LCB statementList RCB
   26                 | FUNC IDENTIFIER LB . parameterDefList RB COLON dataType LCB statementList RCB

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    BOOL    shift, and go to state 6
    STRING  shift, and go to state 7
    ARRAY   shift, and go to state 8

    parameterDefList  go to state 111
    parameterDef      go to state 112
    dataType          go to state 113


State 78

   27 returnStatement: RETURN expression SEMI .

    $default  reduce using rule 27 (returnStatement)


State 79

   24 whileStatement: WHILE expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    statementList      go to state 114
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 80

   35 parameterList: parameterList COMMA . expression

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 115
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 81

   59 arrayLiteral: LSB parameterList RSB .

    $default  reduce using rule 59 (arrayLiteral)


State 82

   62 pair: expression COLON . expression
   63     | expression COLON . expression COMMA

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 116
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 83

   64 dictLiteral: LSB pairList RSB .

    $default  reduce using rule 64 (dictLiteral)


State 84

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression
   62 pair: expression . COLON expression
   63     | expression . COLON expression COMMA

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    COLON          shift, and go to state 82
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 85

   61 pairList: pairList pair .

    $default  reduce using rule 61 (pairList)


State 86

   21 elifStatement: ELIF expression . LCB statementList RCB
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    LCB            shift, and go to state 117
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 87

   22 elseStatement: ELSE LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    statementList      go to state 118
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 88

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   39           | expression ADD expression .
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 39 (expression)


State 89

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   40           | expression SUB expression .
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 40 (expression)


State 90

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   41           | expression MUL expression .
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    POWER  shift, and go to state 60

    $default  reduce using rule 41 (expression)


State 91

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   42           | expression DIV expression .
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    POWER  shift, and go to state 60

    $default  reduce using rule 42 (expression)


State 92

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   43           | expression MOD expression .
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    POWER  shift, and go to state 60

    $default  reduce using rule 43 (expression)


State 93

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   44           | expression POWER expression .
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    POWER  shift, and go to state 60

    $default  reduce using rule 44 (expression)


State 94

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   46           | expression EQ expression .
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 46 (expression)


State 95

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   45           | expression NEQ expression .
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 45 (expression)


State 96

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   47           | expression GT expression .
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 47 (expression)


State 97

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   49           | expression LT expression .
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 49 (expression)


State 98

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   48           | expression GE expression .
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 48 (expression)


State 99

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   50           | expression LE expression .
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60

    $default  reduce using rule 50 (expression)


State 100

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   51           | expression AND expression .
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60
    EQ     shift, and go to state 61
    NEQ    shift, and go to state 62
    GT     shift, and go to state 63
    LT     shift, and go to state 64
    GE     shift, and go to state 65
    LE     shift, and go to state 66

    $default  reduce using rule 51 (expression)


State 101

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression
   52           | expression OR expression .

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60
    EQ     shift, and go to state 61
    NEQ    shift, and go to state 62
    GT     shift, and go to state 63
    LT     shift, and go to state 64
    GE     shift, and go to state 65
    LE     shift, and go to state 66

    $default  reduce using rule 52 (expression)


State 102

   37 expression: expression . RANGE_UNCLOSE expression
   37           | expression RANGE_UNCLOSE expression .
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60
    EQ     shift, and go to state 61
    NEQ    shift, and go to state 62
    GT     shift, and go to state 63
    LT     shift, and go to state 64
    GE     shift, and go to state 65
    LE     shift, and go to state 66
    AND    shift, and go to state 67
    OR     shift, and go to state 68

    $default  reduce using rule 37 (expression)


State 103

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   38           | expression RANGE_CLOSE expression .
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    MUL    shift, and go to state 57
    DIV    shift, and go to state 58
    MOD    shift, and go to state 59
    POWER  shift, and go to state 60
    EQ     shift, and go to state 61
    NEQ    shift, and go to state 62
    GT     shift, and go to state 63
    LT     shift, and go to state 64
    GE     shift, and go to state 65
    LE     shift, and go to state 66
    AND    shift, and go to state 67
    OR     shift, and go to state 68

    $default  reduce using rule 38 (expression)


State 104

   35 parameterList: parameterList . COMMA expression
   54 expression: primaryExpression LB parameterList . RB

    COMMA  shift, and go to state 80
    RB     shift, and go to state 119


State 105

   34 parameterList: expression .
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71

    $default  reduce using rule 34 (parameterList)


State 106

   16 declareStatement: dataType IDENTIFIER ASSIGN . expression SEMI

    IDENTIFIER  shift, and go to state 36
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LSB         shift, and go to state 16

    expression         go to state 120
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33


State 107

   15 declareStatement: dataType IDENTIFIER SEMI .

    $default  reduce using rule 15 (declareStatement)


State 108

   14 assignStatement: IDENTIFIER ASSIGN expression SEMI .

    $default  reduce using rule 14 (assignStatement)


State 109

    3 statementList: statementList . statement
   20 pureIfStatement: IF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RCB         shift, and go to state 121
    LSB         shift, and go to state 16

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 110

   23 forStatement: FOR IDENTIFIER IN expression . LCB statementList RCB
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    LCB            shift, and go to state 122
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 111

   25 funcDefStatement: FUNC IDENTIFIER LB parameterDefList . RB LCB statementList RCB
   26                 | FUNC IDENTIFIER LB parameterDefList . RB COLON dataType LCB statementList RCB
   31 parameterDefList: parameterDefList . parameterDef

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    BOOL    shift, and go to state 6
    STRING  shift, and go to state 7
    ARRAY   shift, and go to state 8
    RB      shift, and go to state 123

    parameterDef  go to state 124
    dataType      go to state 113


State 112

   30 parameterDefList: parameterDef .

    $default  reduce using rule 30 (parameterDefList)


State 113

   32 parameterDef: dataType . IDENTIFIER
   33             | dataType . IDENTIFIER COMMA

    IDENTIFIER  shift, and go to state 125


State 114

    3 statementList: statementList . statement
   24 whileStatement: WHILE expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RCB         shift, and go to state 126
    LSB         shift, and go to state 16

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 115

   35 parameterList: parameterList COMMA expression .
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71

    $default  reduce using rule 35 (parameterList)


State 116

   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression
   62 pair: expression COLON expression .
   63     | expression COLON expression . COMMA

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    COMMA          shift, and go to state 127
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71

    $default  reduce using rule 62 (pair)


State 117

   21 elifStatement: ELIF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    statementList      go to state 128
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 118

    3 statementList: statementList . statement
   22 elseStatement: ELSE LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RCB         shift, and go to state 129
    LSB         shift, and go to state 16

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 119

   54 expression: primaryExpression LB parameterList RB .

    $default  reduce using rule 54 (expression)


State 120

   16 declareStatement: dataType IDENTIFIER ASSIGN expression . SEMI
   37 expression: expression . RANGE_UNCLOSE expression
   38           | expression . RANGE_CLOSE expression
   39           | expression . ADD expression
   40           | expression . SUB expression
   41           | expression . MUL expression
   42           | expression . DIV expression
   43           | expression . MOD expression
   44           | expression . POWER expression
   45           | expression . NEQ expression
   46           | expression . EQ expression
   47           | expression . GT expression
   48           | expression . GE expression
   49           | expression . LT expression
   50           | expression . LE expression
   51           | expression . AND expression
   52           | expression . OR expression

    ADD            shift, and go to state 55
    SUB            shift, and go to state 56
    MUL            shift, and go to state 57
    DIV            shift, and go to state 58
    MOD            shift, and go to state 59
    POWER          shift, and go to state 60
    EQ             shift, and go to state 61
    NEQ            shift, and go to state 62
    GT             shift, and go to state 63
    LT             shift, and go to state 64
    GE             shift, and go to state 65
    LE             shift, and go to state 66
    AND            shift, and go to state 67
    OR             shift, and go to state 68
    SEMI           shift, and go to state 130
    RANGE_UNCLOSE  shift, and go to state 70
    RANGE_CLOSE    shift, and go to state 71


State 121

   20 pureIfStatement: IF expression LCB statementList RCB .

    $default  reduce using rule 20 (pureIfStatement)


State 122

   23 forStatement: FOR IDENTIFIER IN expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    statementList      go to state 131
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 123

   25 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB . LCB statementList RCB
   26                 | FUNC IDENTIFIER LB parameterDefList RB . COLON dataType LCB statementList RCB

    COLON  shift, and go to state 132
    LCB    shift, and go to state 133


State 124

   31 parameterDefList: parameterDefList parameterDef .

    $default  reduce using rule 31 (parameterDefList)


State 125

   32 parameterDef: dataType IDENTIFIER .
   33             | dataType IDENTIFIER . COMMA

    COMMA  shift, and go to state 134

    $default  reduce using rule 32 (parameterDef)


State 126

   24 whileStatement: WHILE expression LCB statementList RCB .

    $default  reduce using rule 24 (whileStatement)


State 127

   63 pair: expression COLON expression COMMA .

    $default  reduce using rule 63 (pair)


State 128

    3 statementList: statementList . statement
   21 elifStatement: ELIF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RCB         shift, and go to state 135
    LSB         shift, and go to state 16

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 129

   22 elseStatement: ELSE LCB statementList RCB .

    $default  reduce using rule 22 (elseStatement)


State 130

   16 declareStatement: dataType IDENTIFIER ASSIGN expression SEMI .

    $default  reduce using rule 16 (declareStatement)


State 131

    3 statementList: statementList . statement
   23 forStatement: FOR IDENTIFIER IN expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RCB         shift, and go to state 136
    LSB         shift, and go to state 16

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 132

   26 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON . dataType LCB statementList RCB

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    BOOL    shift, and go to state 6
    STRING  shift, and go to state 7
    ARRAY   shift, and go to state 8

    dataType  go to state 137


State 133

   25 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    statementList      go to state 138
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 134

   33 parameterDef: dataType IDENTIFIER COMMA .

    $default  reduce using rule 33 (parameterDef)


State 135

   21 elifStatement: ELIF expression LCB statementList RCB .

    $default  reduce using rule 21 (elifStatement)


State 136

   23 forStatement: FOR IDENTIFIER IN expression LCB statementList RCB .

    $default  reduce using rule 23 (forStatement)


State 137

   26 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType . LCB statementList RCB

    LCB  shift, and go to state 139


State 138

    3 statementList: statementList . statement
   25 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RCB         shift, and go to state 140
    LSB         shift, and go to state 16

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 139

   26 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    LSB         shift, and go to state 16

    statementList      go to state 141
    statement          go to state 19
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 140

   25 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB statementList RCB .

    $default  reduce using rule 25 (funcDefStatement)


State 141

    3 statementList: statementList . statement
   26 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    WHILE       shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RCB         shift, and go to state 142
    LSB         shift, and go to state 16

    statement          go to state 50
    assignStatement    go to state 20
    declareStatement   go to state 21
    ifStatement        go to state 22
    pureIfStatement    go to state 23
    forStatement       go to state 24
    whileStatement     go to state 25
    funcDefStatement   go to state 26
    returnStatement    go to state 27
    breakStatement     go to state 28
    continueStatement  go to state 29
    expression         go to state 30
    primaryExpression  go to state 31
    arrayLiteral       go to state 32
    dictLiteral        go to state 33
    dataType           go to state 34


State 142

   26 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB .

    $default  reduce using rule 26 (funcDefStatement)
