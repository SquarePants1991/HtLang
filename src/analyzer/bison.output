Useless nonterminals

   rangeExpression


Terminals which are not used

   IntLiteral
   DoubleLiteral
   BoolLiteral
   BinaryOperator
   Statement
   List
   RANGE_UNCLOSE
   RANGE_CLOSE
   COMMENT_ONE_LINE


Useless rules

   58 rangeExpression: expression RANGE_UNCLOSE expression
   59                | expression RANGE_CLOSE expression


State 31 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce


Grammar

    0 $accept: fragment $end

    1 fragment: statementList

    2 statementList: statement
    3              | statementList statement

    4 statement: expression SEMI
    5          | assignStatement
    6          | declareStatement
    7          | ifStatement
    8          | forStatement
    9          | funcDefStatement
   10          | returnStatement

   11 assignStatement: IDENTIFIER ASSIGN expression SEMI

   12 declareStatement: dataType IDENTIFIER SEMI
   13                 | dataType IDENTIFIER ASSIGN expression SEMI

   14 ifStatement: pureIfStatement
   15            | ifStatement elifStatement
   16            | ifStatement elseStatement

   17 pureIfStatement: IF expression LCB statementList RCB

   18 elifStatement: ELIF expression LCB statementList RCB

   19 elseStatement: ELSE LCB statementList RCB

   20 forStatement: FOR IDENTIFIER IN expression LCB statementList RCB

   21 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB statementList RCB
   22                 | FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

   23 returnStatement: RETURN expression SEMI

   24 expression: primaryExpression
   25           | SUB expression
   26           | expression ADD expression
   27           | expression SUB expression
   28           | expression MUL expression
   29           | expression DIV expression
   30           | expression MOD expression
   31           | expression POWER expression
   32           | expression EQ expression
   33           | expression GT expression
   34           | expression GE expression
   35           | expression LT expression
   36           | expression LE expression
   37           | expression AND expression
   38           | expression OR expression
   39           | IDENTIFIER LB parameterList RB

   40 parameterDefList: parameterDef
   41                 | parameterDefList parameterDef

   42 parameterDef: dataType IDENTIFIER
   43             | dataType IDENTIFIER COMMA

   44 parameterList: parameter
   45              | parameterList parameter

   46 parameter: expression
   47          | expression COMMA

   48 primaryExpression: Literal
   49                  | arrayLiteral
   50                  | IDENTIFIER
   51                  | LB expression RB

   52 arrayLiteral: LSB parameterList RSB

   53 dataType: INT
   54         | DOUBLE
   55         | BOOL
   56         | STRING
   57         | ARRAY


Terminals, with rules where they appear

$end (0) 0
error (256)
IntLiteral (258)
DoubleLiteral (259)
BoolLiteral (260)
IDENTIFIER (261) 11 12 13 20 21 22 39 42 43 50
Literal (262) 48
BinaryOperator (263)
ADD (264) 26
SUB (265) 25 27
MUL (266) 28
DIV (267) 29
MOD (268) 30
POWER (269) 31
EQ (270) 32
GT (271) 33
LT (272) 35
GE (273) 34
LE (274) 36
AND (275) 37
OR (276) 38
Statement (277)
List (278)
ASSIGN (279) 11 13
INT (280) 53
DOUBLE (281) 54
BOOL (282) 55
STRING (283) 56
ARRAY (284) 57
SEMI (285) 4 11 12 13 23
COMMA (286) 43 47
COLON (287) 22
IF (288) 17
ELIF (289) 18
ELSE (290) 19
FOR (291) 20
FUNC (292) 21 22
RETURN (293) 23
LB (294) 21 22 39 51
RB (295) 21 22 39 51
LCB (296) 17 18 19 20 21 22
RCB (297) 17 18 19 20 21 22
LSB (298) 52
RSB (299) 52
RANGE_UNCLOSE (300)
RANGE_CLOSE (301)
IN (302) 20
COMMENT_ONE_LINE (303)
NEGATIVE (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
fragment (51)
    on left: 1, on right: 0
statementList (52)
    on left: 2 3, on right: 1 3 17 18 19 20 21 22
statement (53)
    on left: 4 5 6 7 8 9 10, on right: 2 3
assignStatement (54)
    on left: 11, on right: 5
declareStatement (55)
    on left: 12 13, on right: 6
ifStatement (56)
    on left: 14 15 16, on right: 7 15 16
pureIfStatement (57)
    on left: 17, on right: 14
elifStatement (58)
    on left: 18, on right: 15
elseStatement (59)
    on left: 19, on right: 16
forStatement (60)
    on left: 20, on right: 8
funcDefStatement (61)
    on left: 21 22, on right: 9
returnStatement (62)
    on left: 23, on right: 10
expression (63)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39,
    on right: 4 11 13 17 18 20 23 25 26 27 28 29 30 31 32 33 34 35
    36 37 38 46 47 51
parameterDefList (64)
    on left: 40 41, on right: 21 22 41
parameterDef (65)
    on left: 42 43, on right: 40 41
parameterList (66)
    on left: 44 45, on right: 39 45 52
parameter (67)
    on left: 46 47, on right: 44 45
primaryExpression (68)
    on left: 48 49 50 51, on right: 24
arrayLiteral (69)
    on left: 52, on right: 49
dataType (70)
    on left: 53 54 55 56 57, on right: 12 13 22 42 43


state 0

    0 $accept: . fragment $end

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    fragment           go to state 15
    statementList      go to state 16
    statement          go to state 17
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 1

   11 assignStatement: IDENTIFIER . ASSIGN expression SEMI
   39 expression: IDENTIFIER . LB parameterList RB
   50 primaryExpression: IDENTIFIER .

    ASSIGN  shift, and go to state 29
    LB      shift, and go to state 30

    $default  reduce using rule 50 (primaryExpression)


state 2

   48 primaryExpression: Literal .

    $default  reduce using rule 48 (primaryExpression)


state 3

   25 expression: SUB . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 32
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 4

   53 dataType: INT .

    $default  reduce using rule 53 (dataType)


state 5

   54 dataType: DOUBLE .

    $default  reduce using rule 54 (dataType)


state 6

   55 dataType: BOOL .

    $default  reduce using rule 55 (dataType)


state 7

   56 dataType: STRING .

    $default  reduce using rule 56 (dataType)


state 8

   57 dataType: ARRAY .

    $default  reduce using rule 57 (dataType)


state 9

   17 pureIfStatement: IF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 33
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 10

   20 forStatement: FOR . IDENTIFIER IN expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 34


state 11

   21 funcDefStatement: FUNC . IDENTIFIER LB parameterDefList RB LCB statementList RCB
   22                 | FUNC . IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 35


state 12

   23 returnStatement: RETURN . expression SEMI

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 36
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 13

   51 primaryExpression: LB . expression RB

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 37
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 14

   52 arrayLiteral: LSB . parameterList RSB

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 38
    parameterList      go to state 39
    parameter          go to state 40
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 15

    0 $accept: fragment . $end

    $end  shift, and go to state 41


state 16

    1 fragment: statementList .
    3 statementList: statementList . statement

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    $default  reduce using rule 1 (fragment)

    statement          go to state 42
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 17

    2 statementList: statement .

    $default  reduce using rule 2 (statementList)


state 18

    5 statement: assignStatement .

    $default  reduce using rule 5 (statement)


state 19

    6 statement: declareStatement .

    $default  reduce using rule 6 (statement)


state 20

    7 statement: ifStatement .
   15 ifStatement: ifStatement . elifStatement
   16            | ifStatement . elseStatement

    ELIF  shift, and go to state 43
    ELSE  shift, and go to state 44

    $default  reduce using rule 7 (statement)

    elifStatement  go to state 45
    elseStatement  go to state 46


state 21

   14 ifStatement: pureIfStatement .

    $default  reduce using rule 14 (ifStatement)


state 22

    8 statement: forStatement .

    $default  reduce using rule 8 (statement)


state 23

    9 statement: funcDefStatement .

    $default  reduce using rule 9 (statement)


state 24

   10 statement: returnStatement .

    $default  reduce using rule 10 (statement)


state 25

    4 statement: expression . SEMI
   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    SEMI   shift, and go to state 60


state 26

   24 expression: primaryExpression .

    $default  reduce using rule 24 (expression)


state 27

   49 primaryExpression: arrayLiteral .

    $default  reduce using rule 49 (primaryExpression)


state 28

   12 declareStatement: dataType . IDENTIFIER SEMI
   13                 | dataType . IDENTIFIER ASSIGN expression SEMI

    IDENTIFIER  shift, and go to state 61


state 29

   11 assignStatement: IDENTIFIER ASSIGN . expression SEMI

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 62
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 30

   39 expression: IDENTIFIER LB . parameterList RB

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 38
    parameterList      go to state 63
    parameter          go to state 40
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 31

   39 expression: IDENTIFIER . LB parameterList RB
   50 primaryExpression: IDENTIFIER .

    LB  shift, and go to state 30

    LB        [reduce using rule 50 (primaryExpression)]
    $default  reduce using rule 50 (primaryExpression)


state 32

   25 expression: SUB expression .
   26           | expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    POWER  shift, and go to state 52

    $default  reduce using rule 25 (expression)


state 33

   17 pureIfStatement: IF expression . LCB statementList RCB
   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    LCB    shift, and go to state 64


state 34

   20 forStatement: FOR IDENTIFIER . IN expression LCB statementList RCB

    IN  shift, and go to state 65


state 35

   21 funcDefStatement: FUNC IDENTIFIER . LB parameterDefList RB LCB statementList RCB
   22                 | FUNC IDENTIFIER . LB parameterDefList RB COLON dataType LCB statementList RCB

    LB  shift, and go to state 66


state 36

   23 returnStatement: RETURN expression . SEMI
   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    SEMI   shift, and go to state 67


state 37

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression
   51 primaryExpression: LB expression . RB

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    RB     shift, and go to state 68


state 38

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression
   46 parameter: expression .
   47          | expression . COMMA

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    COMMA  shift, and go to state 69

    SUB       [reduce using rule 46 (parameter)]
    $default  reduce using rule 46 (parameter)


state 39

   45 parameterList: parameterList . parameter
   52 arrayLiteral: LSB parameterList . RSB

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14
    RSB         shift, and go to state 70

    expression         go to state 38
    parameter          go to state 71
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 40

   44 parameterList: parameter .

    $default  reduce using rule 44 (parameterList)


state 41

    0 $accept: fragment $end .

    $default  accept


state 42

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 43

   18 elifStatement: ELIF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 72
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 44

   19 elseStatement: ELSE . LCB statementList RCB

    LCB  shift, and go to state 73


state 45

   15 ifStatement: ifStatement elifStatement .

    $default  reduce using rule 15 (ifStatement)


state 46

   16 ifStatement: ifStatement elseStatement .

    $default  reduce using rule 16 (ifStatement)


state 47

   26 expression: expression ADD . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 74
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 48

   27 expression: expression SUB . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 75
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 49

   28 expression: expression MUL . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 76
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 50

   29 expression: expression DIV . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 77
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 51

   30 expression: expression MOD . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 78
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 52

   31 expression: expression POWER . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 79
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 53

   32 expression: expression EQ . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 80
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 54

   33 expression: expression GT . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 81
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 55

   35 expression: expression LT . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 82
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 56

   34 expression: expression GE . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 83
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 57

   36 expression: expression LE . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 84
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 58

   37 expression: expression AND . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 85
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 59

   38 expression: expression OR . expression

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 86
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 60

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


state 61

   12 declareStatement: dataType IDENTIFIER . SEMI
   13                 | dataType IDENTIFIER . ASSIGN expression SEMI

    ASSIGN  shift, and go to state 87
    SEMI    shift, and go to state 88


state 62

   11 assignStatement: IDENTIFIER ASSIGN expression . SEMI
   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    SEMI   shift, and go to state 89


state 63

   39 expression: IDENTIFIER LB parameterList . RB
   45 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    RB          shift, and go to state 90
    LSB         shift, and go to state 14

    expression         go to state 38
    parameter          go to state 71
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 64

   17 pureIfStatement: IF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    statementList      go to state 91
    statement          go to state 17
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 65

   20 forStatement: FOR IDENTIFIER IN . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 92
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 66

   21 funcDefStatement: FUNC IDENTIFIER LB . parameterDefList RB LCB statementList RCB
   22                 | FUNC IDENTIFIER LB . parameterDefList RB COLON dataType LCB statementList RCB

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    BOOL    shift, and go to state 6
    STRING  shift, and go to state 7
    ARRAY   shift, and go to state 8

    parameterDefList  go to state 93
    parameterDef      go to state 94
    dataType          go to state 95


state 67

   23 returnStatement: RETURN expression SEMI .

    $default  reduce using rule 23 (returnStatement)


state 68

   51 primaryExpression: LB expression RB .

    $default  reduce using rule 51 (primaryExpression)


state 69

   47 parameter: expression COMMA .

    $default  reduce using rule 47 (parameter)


state 70

   52 arrayLiteral: LSB parameterList RSB .

    $default  reduce using rule 52 (arrayLiteral)


state 71

   45 parameterList: parameterList parameter .

    $default  reduce using rule 45 (parameterList)


state 72

   18 elifStatement: ELIF expression . LCB statementList RCB
   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    LCB    shift, and go to state 96


state 73

   19 elseStatement: ELSE LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    statementList      go to state 97
    statement          go to state 17
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 74

   26 expression: expression . ADD expression
   26           | expression ADD expression .
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52

    $default  reduce using rule 26 (expression)


state 75

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   27           | expression SUB expression .
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52

    $default  reduce using rule 27 (expression)


state 76

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   28           | expression MUL expression .
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    POWER  shift, and go to state 52

    $default  reduce using rule 28 (expression)


state 77

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   29           | expression DIV expression .
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    POWER  shift, and go to state 52

    $default  reduce using rule 29 (expression)


state 78

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   30           | expression MOD expression .
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    POWER  shift, and go to state 52

    $default  reduce using rule 30 (expression)


state 79

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   31           | expression POWER expression .
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    POWER  shift, and go to state 52

    $default  reduce using rule 31 (expression)


state 80

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   32           | expression EQ expression .
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52

    $default  reduce using rule 32 (expression)


state 81

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   33           | expression GT expression .
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52

    $default  reduce using rule 33 (expression)


state 82

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   35           | expression LT expression .
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52

    $default  reduce using rule 35 (expression)


state 83

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   34           | expression GE expression .
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52

    $default  reduce using rule 34 (expression)


state 84

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   36           | expression LE expression .
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52

    $default  reduce using rule 36 (expression)


state 85

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   37           | expression AND expression .
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57

    $default  reduce using rule 37 (expression)


state 86

   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression
   38           | expression OR expression .

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57

    $default  reduce using rule 38 (expression)


state 87

   13 declareStatement: dataType IDENTIFIER ASSIGN . expression SEMI

    IDENTIFIER  shift, and go to state 31
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    expression         go to state 98
    primaryExpression  go to state 26
    arrayLiteral       go to state 27


state 88

   12 declareStatement: dataType IDENTIFIER SEMI .

    $default  reduce using rule 12 (declareStatement)


state 89

   11 assignStatement: IDENTIFIER ASSIGN expression SEMI .

    $default  reduce using rule 11 (assignStatement)


state 90

   39 expression: IDENTIFIER LB parameterList RB .

    $default  reduce using rule 39 (expression)


state 91

    3 statementList: statementList . statement
   17 pureIfStatement: IF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    RCB         shift, and go to state 99
    LSB         shift, and go to state 14

    statement          go to state 42
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 92

   20 forStatement: FOR IDENTIFIER IN expression . LCB statementList RCB
   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    LCB    shift, and go to state 100


state 93

   21 funcDefStatement: FUNC IDENTIFIER LB parameterDefList . RB LCB statementList RCB
   22                 | FUNC IDENTIFIER LB parameterDefList . RB COLON dataType LCB statementList RCB
   41 parameterDefList: parameterDefList . parameterDef

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    BOOL    shift, and go to state 6
    STRING  shift, and go to state 7
    ARRAY   shift, and go to state 8
    RB      shift, and go to state 101

    parameterDef  go to state 102
    dataType      go to state 95


state 94

   40 parameterDefList: parameterDef .

    $default  reduce using rule 40 (parameterDefList)


state 95

   42 parameterDef: dataType . IDENTIFIER
   43             | dataType . IDENTIFIER COMMA

    IDENTIFIER  shift, and go to state 103


state 96

   18 elifStatement: ELIF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    statementList      go to state 104
    statement          go to state 17
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 97

    3 statementList: statementList . statement
   19 elseStatement: ELSE LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    RCB         shift, and go to state 105
    LSB         shift, and go to state 14

    statement          go to state 42
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 98

   13 declareStatement: dataType IDENTIFIER ASSIGN expression . SEMI
   26 expression: expression . ADD expression
   27           | expression . SUB expression
   28           | expression . MUL expression
   29           | expression . DIV expression
   30           | expression . MOD expression
   31           | expression . POWER expression
   32           | expression . EQ expression
   33           | expression . GT expression
   34           | expression . GE expression
   35           | expression . LT expression
   36           | expression . LE expression
   37           | expression . AND expression
   38           | expression . OR expression

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    MOD    shift, and go to state 51
    POWER  shift, and go to state 52
    EQ     shift, and go to state 53
    GT     shift, and go to state 54
    LT     shift, and go to state 55
    GE     shift, and go to state 56
    LE     shift, and go to state 57
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    SEMI   shift, and go to state 106


state 99

   17 pureIfStatement: IF expression LCB statementList RCB .

    $default  reduce using rule 17 (pureIfStatement)


state 100

   20 forStatement: FOR IDENTIFIER IN expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    statementList      go to state 107
    statement          go to state 17
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 101

   21 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB . LCB statementList RCB
   22                 | FUNC IDENTIFIER LB parameterDefList RB . COLON dataType LCB statementList RCB

    COLON  shift, and go to state 108
    LCB    shift, and go to state 109


state 102

   41 parameterDefList: parameterDefList parameterDef .

    $default  reduce using rule 41 (parameterDefList)


state 103

   42 parameterDef: dataType IDENTIFIER .
   43             | dataType IDENTIFIER . COMMA

    COMMA  shift, and go to state 110

    $default  reduce using rule 42 (parameterDef)


state 104

    3 statementList: statementList . statement
   18 elifStatement: ELIF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    RCB         shift, and go to state 111
    LSB         shift, and go to state 14

    statement          go to state 42
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 105

   19 elseStatement: ELSE LCB statementList RCB .

    $default  reduce using rule 19 (elseStatement)


state 106

   13 declareStatement: dataType IDENTIFIER ASSIGN expression SEMI .

    $default  reduce using rule 13 (declareStatement)


state 107

    3 statementList: statementList . statement
   20 forStatement: FOR IDENTIFIER IN expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    RCB         shift, and go to state 112
    LSB         shift, and go to state 14

    statement          go to state 42
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 108

   22 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON . dataType LCB statementList RCB

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    BOOL    shift, and go to state 6
    STRING  shift, and go to state 7
    ARRAY   shift, and go to state 8

    dataType  go to state 113


state 109

   21 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    statementList      go to state 114
    statement          go to state 17
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 110

   43 parameterDef: dataType IDENTIFIER COMMA .

    $default  reduce using rule 43 (parameterDef)


state 111

   18 elifStatement: ELIF expression LCB statementList RCB .

    $default  reduce using rule 18 (elifStatement)


state 112

   20 forStatement: FOR IDENTIFIER IN expression LCB statementList RCB .

    $default  reduce using rule 20 (forStatement)


state 113

   22 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType . LCB statementList RCB

    LCB  shift, and go to state 115


state 114

    3 statementList: statementList . statement
   21 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    RCB         shift, and go to state 116
    LSB         shift, and go to state 14

    statement          go to state 42
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 115

   22 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    LSB         shift, and go to state 14

    statementList      go to state 117
    statement          go to state 17
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 116

   21 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB LCB statementList RCB .

    $default  reduce using rule 21 (funcDefStatement)


state 117

    3 statementList: statementList . statement
   22 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    SUB         shift, and go to state 3
    INT         shift, and go to state 4
    DOUBLE      shift, and go to state 5
    BOOL        shift, and go to state 6
    STRING      shift, and go to state 7
    ARRAY       shift, and go to state 8
    IF          shift, and go to state 9
    FOR         shift, and go to state 10
    FUNC        shift, and go to state 11
    RETURN      shift, and go to state 12
    LB          shift, and go to state 13
    RCB         shift, and go to state 118
    LSB         shift, and go to state 14

    statement          go to state 42
    assignStatement    go to state 18
    declareStatement   go to state 19
    ifStatement        go to state 20
    pureIfStatement    go to state 21
    forStatement       go to state 22
    funcDefStatement   go to state 23
    returnStatement    go to state 24
    expression         go to state 25
    primaryExpression  go to state 26
    arrayLiteral       go to state 27
    dataType           go to state 28


state 118

   22 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB .

    $default  reduce using rule 22 (funcDefStatement)
