Terminals which are not used

   IntLiteral
   DoubleLiteral
   BoolLiteral
   Statement
   GT
   LT
   GE
   LE
   COMMENT_ONE_LINE


Grammar

    0 $accept: fragment $end

    1 fragment: statementList

    2 statementList: statement
    3              | statementList statement

    4 statement: expression SEMI
    5          | assignStatement
    6          | declareStatement
    7          | ifStatement
    8          | forStatement
    9          | funcDefStatement
   10          | funcCallStatement

   11 assignStatement: IDENTIFIER EQ expression SEMI

   12 declareStatement: dataType IDENTIFIER SEMI
   13                 | dataType IDENTIFIER EQ expression SEMI

   14 ifStatement: IF expression LCB statementList RCB

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI

   19 parameterDefList: parameterDef
   20                 | parameterDefList parameterDef

   21 parameterDef: INT IDENTIFIER
   22             | INT IDENTIFIER COMMA

   23 parameterList: parameter
   24              | parameterList parameter

   25 parameter: IDENTIFIER
   26          | IDENTIFIER COMMA

   27 rangeExpression: expression RANGE_UNCLOSE expression
   28                | expression RANGE_CLOSE expression

   29 expression: term
   30           | expression ADD term
   31           | expression SUB term

   32 term: primaryExpression
   33     | term MUL primaryExpression
   34     | term DIV primaryExpression

   35 primaryExpression: Literal
   36                  | IDENTIFIER
   37                  | LB expression RB

   38 dataType: INT
   39         | DOUBLE
   40         | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
IntLiteral (258)
DoubleLiteral (259)
BoolLiteral (260)
IDENTIFIER (261) 11 12 13 15 16 17 18 21 22 25 26 36
Literal (262) 35
Statement (263)
EQ (264) 11 13
INT (265) 21 22 38
DOUBLE (266) 39
BOOL (267) 40
SEMI (268) 4 11 12 13 18
COMMA (269) 22 26
COLON (270) 17
IF (271) 14
FOR (272) 15
FUNC (273) 16 17
ADD (274) 30
SUB (275) 31
MUL (276) 33
DIV (277) 34
LB (278) 16 17 18 37
RB (279) 16 17 18 37
LCB (280) 14 15 16 17
RCB (281) 14 15 16 17
GT (282)
LT (283)
GE (284)
LE (285)
RANGE_UNCLOSE (286) 27
RANGE_CLOSE (287) 28
IN (288) 15
COMMENT_ONE_LINE (289)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
fragment (36)
    on left: 1, on right: 0
statementList (37)
    on left: 2 3, on right: 1 3 14 15 16 17
statement (38)
    on left: 4 5 6 7 8 9 10, on right: 2 3
assignStatement (39)
    on left: 11, on right: 5
declareStatement (40)
    on left: 12 13, on right: 6
ifStatement (41)
    on left: 14, on right: 7
forStatement (42)
    on left: 15, on right: 8
funcDefStatement (43)
    on left: 16 17, on right: 9
funcCallStatement (44)
    on left: 18, on right: 10
parameterDefList (45)
    on left: 19 20, on right: 17 20
parameterDef (46)
    on left: 21 22, on right: 19 20
parameterList (47)
    on left: 23 24, on right: 16 18 24
parameter (48)
    on left: 25 26, on right: 23 24
rangeExpression (49)
    on left: 27 28, on right: 15
expression (50)
    on left: 29 30 31, on right: 4 11 13 14 27 28 30 31 37
term (51)
    on left: 32 33 34, on right: 29 30 31 33 34
primaryExpression (52)
    on left: 35 36 37, on right: 32 33 34
dataType (53)
    on left: 38 39 40, on right: 12 13 17


state 0

    0 $accept: . fragment $end

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    fragment           go to state 10
    statementList      go to state 11
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 1

   11 assignStatement: IDENTIFIER . EQ expression SEMI
   18 funcCallStatement: IDENTIFIER . LB parameterList RB SEMI
   36 primaryExpression: IDENTIFIER .

    EQ  shift, and go to state 23
    LB  shift, and go to state 24

    $default  reduce using rule 36 (primaryExpression)


state 2

   35 primaryExpression: Literal .

    $default  reduce using rule 35 (primaryExpression)


state 3

   38 dataType: INT .

    $default  reduce using rule 38 (dataType)


state 4

   39 dataType: DOUBLE .

    $default  reduce using rule 39 (dataType)


state 5

   40 dataType: BOOL .

    $default  reduce using rule 40 (dataType)


state 6

   14 ifStatement: IF . expression LCB statementList RCB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 26
    term               go to state 20
    primaryExpression  go to state 21


state 7

   15 forStatement: FOR . IDENTIFIER IN rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 27


state 8

   16 funcDefStatement: FUNC . IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC . IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 28


state 9

   37 primaryExpression: LB . expression RB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 29
    term               go to state 20
    primaryExpression  go to state 21


state 10

    0 $accept: fragment . $end

    $end  shift, and go to state 30


state 11

    1 fragment: statementList .
    3 statementList: statementList . statement

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    $default  reduce using rule 1 (fragment)

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 12

    2 statementList: statement .

    $default  reduce using rule 2 (statementList)


state 13

    5 statement: assignStatement .

    $default  reduce using rule 5 (statement)


state 14

    6 statement: declareStatement .

    $default  reduce using rule 6 (statement)


state 15

    7 statement: ifStatement .

    $default  reduce using rule 7 (statement)


state 16

    8 statement: forStatement .

    $default  reduce using rule 8 (statement)


state 17

    9 statement: funcDefStatement .

    $default  reduce using rule 9 (statement)


state 18

   10 statement: funcCallStatement .

    $default  reduce using rule 10 (statement)


state 19

    4 statement: expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 32
    ADD   shift, and go to state 33
    SUB   shift, and go to state 34


state 20

   29 expression: term .
   33 term: term . MUL primaryExpression
   34     | term . DIV primaryExpression

    MUL  shift, and go to state 35
    DIV  shift, and go to state 36

    $default  reduce using rule 29 (expression)


state 21

   32 term: primaryExpression .

    $default  reduce using rule 32 (term)


state 22

   12 declareStatement: dataType . IDENTIFIER SEMI
   13                 | dataType . IDENTIFIER EQ expression SEMI

    IDENTIFIER  shift, and go to state 37


state 23

   11 assignStatement: IDENTIFIER EQ . expression SEMI

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 38
    term               go to state 20
    primaryExpression  go to state 21


state 24

   18 funcCallStatement: IDENTIFIER LB . parameterList RB SEMI

    IDENTIFIER  shift, and go to state 39

    parameterList  go to state 40
    parameter      go to state 41


state 25

   36 primaryExpression: IDENTIFIER .

    $default  reduce using rule 36 (primaryExpression)


state 26

   14 ifStatement: IF expression . LCB statementList RCB
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34
    LCB  shift, and go to state 42


state 27

   15 forStatement: FOR IDENTIFIER . IN rangeExpression LCB statementList RCB

    IN  shift, and go to state 43


state 28

   16 funcDefStatement: FUNC IDENTIFIER . LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER . LB parameterDefList RB COLON dataType LCB statementList RCB

    LB  shift, and go to state 44


state 29

   30 expression: expression . ADD term
   31           | expression . SUB term
   37 primaryExpression: LB expression . RB

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34
    RB   shift, and go to state 45


state 30

    0 $accept: fragment $end .

    $default  accept


state 31

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 32

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


state 33

   30 expression: expression ADD . term

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    term               go to state 46
    primaryExpression  go to state 21


state 34

   31 expression: expression SUB . term

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    term               go to state 47
    primaryExpression  go to state 21


state 35

   33 term: term MUL . primaryExpression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    primaryExpression  go to state 48


state 36

   34 term: term DIV . primaryExpression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    primaryExpression  go to state 49


state 37

   12 declareStatement: dataType IDENTIFIER . SEMI
   13                 | dataType IDENTIFIER . EQ expression SEMI

    EQ    shift, and go to state 50
    SEMI  shift, and go to state 51


state 38

   11 assignStatement: IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 52
    ADD   shift, and go to state 33
    SUB   shift, and go to state 34


state 39

   25 parameter: IDENTIFIER .
   26          | IDENTIFIER . COMMA

    COMMA  shift, and go to state 53

    $default  reduce using rule 25 (parameter)


state 40

   18 funcCallStatement: IDENTIFIER LB parameterList . RB SEMI
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 39
    RB          shift, and go to state 54

    parameter  go to state 55


state 41

   23 parameterList: parameter .

    $default  reduce using rule 23 (parameterList)


state 42

   14 ifStatement: IF expression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 56
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 43

   15 forStatement: FOR IDENTIFIER IN . rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    rangeExpression    go to state 57
    expression         go to state 58
    term               go to state 20
    primaryExpression  go to state 21


state 44

   16 funcDefStatement: FUNC IDENTIFIER LB . parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB . parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 39
    INT         shift, and go to state 59

    parameterDefList  go to state 60
    parameterDef      go to state 61
    parameterList     go to state 62
    parameter         go to state 41


state 45

   37 primaryExpression: LB expression RB .

    $default  reduce using rule 37 (primaryExpression)


state 46

   30 expression: expression ADD term .
   33 term: term . MUL primaryExpression
   34     | term . DIV primaryExpression

    MUL  shift, and go to state 35
    DIV  shift, and go to state 36

    $default  reduce using rule 30 (expression)


state 47

   31 expression: expression SUB term .
   33 term: term . MUL primaryExpression
   34     | term . DIV primaryExpression

    MUL  shift, and go to state 35
    DIV  shift, and go to state 36

    $default  reduce using rule 31 (expression)


state 48

   33 term: term MUL primaryExpression .

    $default  reduce using rule 33 (term)


state 49

   34 term: term DIV primaryExpression .

    $default  reduce using rule 34 (term)


state 50

   13 declareStatement: dataType IDENTIFIER EQ . expression SEMI

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 63
    term               go to state 20
    primaryExpression  go to state 21


state 51

   12 declareStatement: dataType IDENTIFIER SEMI .

    $default  reduce using rule 12 (declareStatement)


state 52

   11 assignStatement: IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 11 (assignStatement)


state 53

   26 parameter: IDENTIFIER COMMA .

    $default  reduce using rule 26 (parameter)


state 54

   18 funcCallStatement: IDENTIFIER LB parameterList RB . SEMI

    SEMI  shift, and go to state 64


state 55

   24 parameterList: parameterList parameter .

    $default  reduce using rule 24 (parameterList)


state 56

    3 statementList: statementList . statement
   14 ifStatement: IF expression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 65

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 57

   15 forStatement: FOR IDENTIFIER IN rangeExpression . LCB statementList RCB

    LCB  shift, and go to state 66


state 58

   27 rangeExpression: expression . RANGE_UNCLOSE expression
   28                | expression . RANGE_CLOSE expression
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD            shift, and go to state 33
    SUB            shift, and go to state 34
    RANGE_UNCLOSE  shift, and go to state 67
    RANGE_CLOSE    shift, and go to state 68


state 59

   21 parameterDef: INT . IDENTIFIER
   22             | INT . IDENTIFIER COMMA

    IDENTIFIER  shift, and go to state 69


state 60

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList . RB COLON dataType LCB statementList RCB
   20 parameterDefList: parameterDefList . parameterDef

    INT  shift, and go to state 59
    RB   shift, and go to state 70

    parameterDef  go to state 71


state 61

   19 parameterDefList: parameterDef .

    $default  reduce using rule 19 (parameterDefList)


state 62

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList . RB LCB statementList RCB
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 39
    RB          shift, and go to state 72

    parameter  go to state 55


state 63

   13 declareStatement: dataType IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 73
    ADD   shift, and go to state 33
    SUB   shift, and go to state 34


state 64

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI .

    $default  reduce using rule 18 (funcCallStatement)


state 65

   14 ifStatement: IF expression LCB statementList RCB .

    $default  reduce using rule 14 (ifStatement)


state 66

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 74
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 67

   27 rangeExpression: expression RANGE_UNCLOSE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 75
    term               go to state 20
    primaryExpression  go to state 21


state 68

   28 rangeExpression: expression RANGE_CLOSE . expression

    IDENTIFIER  shift, and go to state 25
    Literal     shift, and go to state 2
    LB          shift, and go to state 9

    expression         go to state 76
    term               go to state 20
    primaryExpression  go to state 21


state 69

   21 parameterDef: INT IDENTIFIER .
   22             | INT IDENTIFIER . COMMA

    COMMA  shift, and go to state 77

    $default  reduce using rule 21 (parameterDef)


state 70

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB . COLON dataType LCB statementList RCB

    COLON  shift, and go to state 78


state 71

   20 parameterDefList: parameterDefList parameterDef .

    $default  reduce using rule 20 (parameterDefList)


state 72

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB . LCB statementList RCB

    LCB  shift, and go to state 79


state 73

   13 declareStatement: dataType IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 13 (declareStatement)


state 74

    3 statementList: statementList . statement
   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 80

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 75

   27 rangeExpression: expression RANGE_UNCLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34

    $default  reduce using rule 27 (rangeExpression)


state 76

   28 rangeExpression: expression RANGE_CLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 33
    SUB  shift, and go to state 34

    $default  reduce using rule 28 (rangeExpression)


state 77

   22 parameterDef: INT IDENTIFIER COMMA .

    $default  reduce using rule 22 (parameterDef)


state 78

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON . dataType LCB statementList RCB

    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    BOOL    shift, and go to state 5

    dataType  go to state 81


state 79

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 82
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 80

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB .

    $default  reduce using rule 15 (forStatement)


state 81

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType . LCB statementList RCB

    LCB  shift, and go to state 83


state 82

    3 statementList: statementList . statement
   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 84

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 83

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB . statementList RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9

    statementList      go to state 85
    statement          go to state 12
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 84

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB .

    $default  reduce using rule 16 (funcDefStatement)


state 85

    3 statementList: statementList . statement
   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList . RCB

    IDENTIFIER  shift, and go to state 1
    Literal     shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    BOOL        shift, and go to state 5
    IF          shift, and go to state 6
    FOR         shift, and go to state 7
    FUNC        shift, and go to state 8
    LB          shift, and go to state 9
    RCB         shift, and go to state 86

    statement          go to state 31
    assignStatement    go to state 13
    declareStatement   go to state 14
    ifStatement        go to state 15
    forStatement       go to state 16
    funcDefStatement   go to state 17
    funcCallStatement  go to state 18
    expression         go to state 19
    term               go to state 20
    primaryExpression  go to state 21
    dataType           go to state 22


state 86

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB .

    $default  reduce using rule 17 (funcDefStatement)
