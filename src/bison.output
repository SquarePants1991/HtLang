Terminals which are not used

   IntLiteral
   DoubleLiteral
   BoolLiteral
   GT
   LT
   GE
   LE
   COMMENT_ONE_LINE


State 0 conflicts: 9 shift/reduce
State 41 conflicts: 9 shift/reduce
State 65 conflicts: 9 shift/reduce
State 78 conflicts: 9 shift/reduce
State 82 conflicts: 9 shift/reduce


Grammar

    0 $accept: statementList $end

    1 statementList: statement
    2              | statementList statement
    3              | /* empty */

    4 statement: expression SEMI
    5          | assignStatement
    6          | defineStatement
    7          | ifStatement
    8          | forStatement
    9          | funcDefStatement
   10          | funcCallStatement

   11 assignStatement: IDENTIFIER EQ expression SEMI

   12 defineStatement: dataType IDENTIFIER SEMI
   13                | dataType IDENTIFIER EQ expression SEMI

   14 ifStatement: IF expression LCB statementList RCB

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI

   19 parameterDefList: parameterDef
   20                 | parameterDefList parameterDef

   21 parameterDef: INT IDENTIFIER
   22             | INT IDENTIFIER COMMA

   23 parameterList: parameter
   24              | parameterList parameter

   25 parameter: IDENTIFIER
   26          | IDENTIFIER COMMA

   27 rangeExpression: expression RANGE_UNCLOSE expression
   28                | expression RANGE_CLOSE expression

   29 expression: term
   30           | expression ADD term
   31           | expression SUB term

   32 term: primaryExpression
   33     | term MUL primaryExpression
   34     | term DIV primaryExpression

   35 primaryExpression: ExpressionValue
   36                  | IDENTIFIER
   37                  | LB expression RB

   38 dataType: INT
   39         | DOUBLE
   40         | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
IntLiteral (258)
DoubleLiteral (259)
BoolLiteral (260)
IDENTIFIER (261) 11 12 13 15 16 17 18 21 22 25 26 36
ExpressionValue (262) 35
EQ (263) 11 13
INT (264) 21 22 38
DOUBLE (265) 39
BOOL (266) 40
SEMI (267) 4 11 12 13 18
COMMA (268) 22 26
COLON (269) 17
IF (270) 14
FOR (271) 15
FUNC (272) 16 17
ADD (273) 30
SUB (274) 31
MUL (275) 33
DIV (276) 34
LB (277) 16 17 18 37
RB (278) 16 17 18 37
LCB (279) 14 15 16 17
RCB (280) 14 15 16 17
GT (281)
LT (282)
GE (283)
LE (284)
RANGE_UNCLOSE (285) 27
RANGE_CLOSE (286) 28
IN (287) 15
COMMENT_ONE_LINE (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
statementList (35)
    on left: 1 2 3, on right: 0 2 14 15 16 17
statement (36)
    on left: 4 5 6 7 8 9 10, on right: 1 2
assignStatement (37)
    on left: 11, on right: 5
defineStatement (38)
    on left: 12 13, on right: 6
ifStatement (39)
    on left: 14, on right: 7
forStatement (40)
    on left: 15, on right: 8
funcDefStatement (41)
    on left: 16 17, on right: 9
funcCallStatement (42)
    on left: 18, on right: 10
parameterDefList (43)
    on left: 19 20, on right: 17 20
parameterDef (44)
    on left: 21 22, on right: 19 20
parameterList (45)
    on left: 23 24, on right: 16 18 24
parameter (46)
    on left: 25 26, on right: 23 24
rangeExpression (47)
    on left: 27 28, on right: 15
expression (48)
    on left: 29 30 31, on right: 4 11 13 14 27 28 30 31 37
term (49)
    on left: 32 33 34, on right: 29 30 31 33 34
primaryExpression (50)
    on left: 35 36 37, on right: 32 33 34
dataType (51)
    on left: 38 39 40, on right: 12 13 17


state 0

    0 $accept: . statementList $end

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9

    IDENTIFIER       [reduce using rule 3 (statementList)]
    ExpressionValue  [reduce using rule 3 (statementList)]
    INT              [reduce using rule 3 (statementList)]
    DOUBLE           [reduce using rule 3 (statementList)]
    BOOL             [reduce using rule 3 (statementList)]
    IF               [reduce using rule 3 (statementList)]
    FOR              [reduce using rule 3 (statementList)]
    FUNC             [reduce using rule 3 (statementList)]
    LB               [reduce using rule 3 (statementList)]
    $default         reduce using rule 3 (statementList)

    statementList      go to state 10
    statement          go to state 11
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 1

   11 assignStatement: IDENTIFIER . EQ expression SEMI
   18 funcCallStatement: IDENTIFIER . LB parameterList RB SEMI
   36 primaryExpression: IDENTIFIER .

    EQ  shift, and go to state 22
    LB  shift, and go to state 23

    $default  reduce using rule 36 (primaryExpression)


state 2

   35 primaryExpression: ExpressionValue .

    $default  reduce using rule 35 (primaryExpression)


state 3

   38 dataType: INT .

    $default  reduce using rule 38 (dataType)


state 4

   39 dataType: DOUBLE .

    $default  reduce using rule 39 (dataType)


state 5

   40 dataType: BOOL .

    $default  reduce using rule 40 (dataType)


state 6

   14 ifStatement: IF . expression LCB statementList RCB

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    expression         go to state 25
    term               go to state 19
    primaryExpression  go to state 20


state 7

   15 forStatement: FOR . IDENTIFIER IN rangeExpression LCB statementList RCB

    IDENTIFIER  shift, and go to state 26


state 8

   16 funcDefStatement: FUNC . IDENTIFIER LB parameterList RB LCB statementList RCB
   17                 | FUNC . IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 27


state 9

   37 primaryExpression: LB . expression RB

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    expression         go to state 28
    term               go to state 19
    primaryExpression  go to state 20


state 10

    0 $accept: statementList . $end
    2 statementList: statementList . statement

    $end             shift, and go to state 29
    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9

    statement          go to state 30
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 11

    1 statementList: statement .

    $default  reduce using rule 1 (statementList)


state 12

    5 statement: assignStatement .

    $default  reduce using rule 5 (statement)


state 13

    6 statement: defineStatement .

    $default  reduce using rule 6 (statement)


state 14

    7 statement: ifStatement .

    $default  reduce using rule 7 (statement)


state 15

    8 statement: forStatement .

    $default  reduce using rule 8 (statement)


state 16

    9 statement: funcDefStatement .

    $default  reduce using rule 9 (statement)


state 17

   10 statement: funcCallStatement .

    $default  reduce using rule 10 (statement)


state 18

    4 statement: expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 31
    ADD   shift, and go to state 32
    SUB   shift, and go to state 33


state 19

   29 expression: term .
   33 term: term . MUL primaryExpression
   34     | term . DIV primaryExpression

    MUL  shift, and go to state 34
    DIV  shift, and go to state 35

    $default  reduce using rule 29 (expression)


state 20

   32 term: primaryExpression .

    $default  reduce using rule 32 (term)


state 21

   12 defineStatement: dataType . IDENTIFIER SEMI
   13                | dataType . IDENTIFIER EQ expression SEMI

    IDENTIFIER  shift, and go to state 36


state 22

   11 assignStatement: IDENTIFIER EQ . expression SEMI

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    expression         go to state 37
    term               go to state 19
    primaryExpression  go to state 20


state 23

   18 funcCallStatement: IDENTIFIER LB . parameterList RB SEMI

    IDENTIFIER  shift, and go to state 38

    parameterList  go to state 39
    parameter      go to state 40


state 24

   36 primaryExpression: IDENTIFIER .

    $default  reduce using rule 36 (primaryExpression)


state 25

   14 ifStatement: IF expression . LCB statementList RCB
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 32
    SUB  shift, and go to state 33
    LCB  shift, and go to state 41


state 26

   15 forStatement: FOR IDENTIFIER . IN rangeExpression LCB statementList RCB

    IN  shift, and go to state 42


state 27

   16 funcDefStatement: FUNC IDENTIFIER . LB parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER . LB parameterDefList RB COLON dataType LCB statementList RCB

    LB  shift, and go to state 43


state 28

   30 expression: expression . ADD term
   31           | expression . SUB term
   37 primaryExpression: LB expression . RB

    ADD  shift, and go to state 32
    SUB  shift, and go to state 33
    RB   shift, and go to state 44


state 29

    0 $accept: statementList $end .

    $default  accept


state 30

    2 statementList: statementList statement .

    $default  reduce using rule 2 (statementList)


state 31

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


state 32

   30 expression: expression ADD . term

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    term               go to state 45
    primaryExpression  go to state 20


state 33

   31 expression: expression SUB . term

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    term               go to state 46
    primaryExpression  go to state 20


state 34

   33 term: term MUL . primaryExpression

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    primaryExpression  go to state 47


state 35

   34 term: term DIV . primaryExpression

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    primaryExpression  go to state 48


state 36

   12 defineStatement: dataType IDENTIFIER . SEMI
   13                | dataType IDENTIFIER . EQ expression SEMI

    EQ    shift, and go to state 49
    SEMI  shift, and go to state 50


state 37

   11 assignStatement: IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 51
    ADD   shift, and go to state 32
    SUB   shift, and go to state 33


state 38

   25 parameter: IDENTIFIER .
   26          | IDENTIFIER . COMMA

    COMMA  shift, and go to state 52

    $default  reduce using rule 25 (parameter)


state 39

   18 funcCallStatement: IDENTIFIER LB parameterList . RB SEMI
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 38
    RB          shift, and go to state 53

    parameter  go to state 54


state 40

   23 parameterList: parameter .

    $default  reduce using rule 23 (parameterList)


state 41

   14 ifStatement: IF expression LCB . statementList RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9

    IDENTIFIER       [reduce using rule 3 (statementList)]
    ExpressionValue  [reduce using rule 3 (statementList)]
    INT              [reduce using rule 3 (statementList)]
    DOUBLE           [reduce using rule 3 (statementList)]
    BOOL             [reduce using rule 3 (statementList)]
    IF               [reduce using rule 3 (statementList)]
    FOR              [reduce using rule 3 (statementList)]
    FUNC             [reduce using rule 3 (statementList)]
    LB               [reduce using rule 3 (statementList)]
    $default         reduce using rule 3 (statementList)

    statementList      go to state 55
    statement          go to state 11
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 42

   15 forStatement: FOR IDENTIFIER IN . rangeExpression LCB statementList RCB

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    rangeExpression    go to state 56
    expression         go to state 57
    term               go to state 19
    primaryExpression  go to state 20


state 43

   16 funcDefStatement: FUNC IDENTIFIER LB . parameterList RB LCB statementList RCB
   17                 | FUNC IDENTIFIER LB . parameterDefList RB COLON dataType LCB statementList RCB

    IDENTIFIER  shift, and go to state 38
    INT         shift, and go to state 58

    parameterDefList  go to state 59
    parameterDef      go to state 60
    parameterList     go to state 61
    parameter         go to state 40


state 44

   37 primaryExpression: LB expression RB .

    $default  reduce using rule 37 (primaryExpression)


state 45

   30 expression: expression ADD term .
   33 term: term . MUL primaryExpression
   34     | term . DIV primaryExpression

    MUL  shift, and go to state 34
    DIV  shift, and go to state 35

    $default  reduce using rule 30 (expression)


state 46

   31 expression: expression SUB term .
   33 term: term . MUL primaryExpression
   34     | term . DIV primaryExpression

    MUL  shift, and go to state 34
    DIV  shift, and go to state 35

    $default  reduce using rule 31 (expression)


state 47

   33 term: term MUL primaryExpression .

    $default  reduce using rule 33 (term)


state 48

   34 term: term DIV primaryExpression .

    $default  reduce using rule 34 (term)


state 49

   13 defineStatement: dataType IDENTIFIER EQ . expression SEMI

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    expression         go to state 62
    term               go to state 19
    primaryExpression  go to state 20


state 50

   12 defineStatement: dataType IDENTIFIER SEMI .

    $default  reduce using rule 12 (defineStatement)


state 51

   11 assignStatement: IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 11 (assignStatement)


state 52

   26 parameter: IDENTIFIER COMMA .

    $default  reduce using rule 26 (parameter)


state 53

   18 funcCallStatement: IDENTIFIER LB parameterList RB . SEMI

    SEMI  shift, and go to state 63


state 54

   24 parameterList: parameterList parameter .

    $default  reduce using rule 24 (parameterList)


state 55

    2 statementList: statementList . statement
   14 ifStatement: IF expression LCB statementList . RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9
    RCB              shift, and go to state 64

    statement          go to state 30
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 56

   15 forStatement: FOR IDENTIFIER IN rangeExpression . LCB statementList RCB

    LCB  shift, and go to state 65


state 57

   27 rangeExpression: expression . RANGE_UNCLOSE expression
   28                | expression . RANGE_CLOSE expression
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD            shift, and go to state 32
    SUB            shift, and go to state 33
    RANGE_UNCLOSE  shift, and go to state 66
    RANGE_CLOSE    shift, and go to state 67


state 58

   21 parameterDef: INT . IDENTIFIER
   22             | INT . IDENTIFIER COMMA

    IDENTIFIER  shift, and go to state 68


state 59

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList . RB COLON dataType LCB statementList RCB
   20 parameterDefList: parameterDefList . parameterDef

    INT  shift, and go to state 58
    RB   shift, and go to state 69

    parameterDef  go to state 70


state 60

   19 parameterDefList: parameterDef .

    $default  reduce using rule 19 (parameterDefList)


state 61

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList . RB LCB statementList RCB
   24 parameterList: parameterList . parameter

    IDENTIFIER  shift, and go to state 38
    RB          shift, and go to state 71

    parameter  go to state 54


state 62

   13 defineStatement: dataType IDENTIFIER EQ expression . SEMI
   30 expression: expression . ADD term
   31           | expression . SUB term

    SEMI  shift, and go to state 72
    ADD   shift, and go to state 32
    SUB   shift, and go to state 33


state 63

   18 funcCallStatement: IDENTIFIER LB parameterList RB SEMI .

    $default  reduce using rule 18 (funcCallStatement)


state 64

   14 ifStatement: IF expression LCB statementList RCB .

    $default  reduce using rule 14 (ifStatement)


state 65

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB . statementList RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9

    IDENTIFIER       [reduce using rule 3 (statementList)]
    ExpressionValue  [reduce using rule 3 (statementList)]
    INT              [reduce using rule 3 (statementList)]
    DOUBLE           [reduce using rule 3 (statementList)]
    BOOL             [reduce using rule 3 (statementList)]
    IF               [reduce using rule 3 (statementList)]
    FOR              [reduce using rule 3 (statementList)]
    FUNC             [reduce using rule 3 (statementList)]
    LB               [reduce using rule 3 (statementList)]
    $default         reduce using rule 3 (statementList)

    statementList      go to state 73
    statement          go to state 11
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 66

   27 rangeExpression: expression RANGE_UNCLOSE . expression

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    expression         go to state 74
    term               go to state 19
    primaryExpression  go to state 20


state 67

   28 rangeExpression: expression RANGE_CLOSE . expression

    IDENTIFIER       shift, and go to state 24
    ExpressionValue  shift, and go to state 2
    LB               shift, and go to state 9

    expression         go to state 75
    term               go to state 19
    primaryExpression  go to state 20


state 68

   21 parameterDef: INT IDENTIFIER .
   22             | INT IDENTIFIER . COMMA

    COMMA  shift, and go to state 76

    $default  reduce using rule 21 (parameterDef)


state 69

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB . COLON dataType LCB statementList RCB

    COLON  shift, and go to state 77


state 70

   20 parameterDefList: parameterDefList parameterDef .

    $default  reduce using rule 20 (parameterDefList)


state 71

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB . LCB statementList RCB

    LCB  shift, and go to state 78


state 72

   13 defineStatement: dataType IDENTIFIER EQ expression SEMI .

    $default  reduce using rule 13 (defineStatement)


state 73

    2 statementList: statementList . statement
   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList . RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9
    RCB              shift, and go to state 79

    statement          go to state 30
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 74

   27 rangeExpression: expression RANGE_UNCLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 32
    SUB  shift, and go to state 33

    $default  reduce using rule 27 (rangeExpression)


state 75

   28 rangeExpression: expression RANGE_CLOSE expression .
   30 expression: expression . ADD term
   31           | expression . SUB term

    ADD  shift, and go to state 32
    SUB  shift, and go to state 33

    $default  reduce using rule 28 (rangeExpression)


state 76

   22 parameterDef: INT IDENTIFIER COMMA .

    $default  reduce using rule 22 (parameterDef)


state 77

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON . dataType LCB statementList RCB

    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    BOOL    shift, and go to state 5

    dataType  go to state 80


state 78

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB . statementList RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9

    IDENTIFIER       [reduce using rule 3 (statementList)]
    ExpressionValue  [reduce using rule 3 (statementList)]
    INT              [reduce using rule 3 (statementList)]
    DOUBLE           [reduce using rule 3 (statementList)]
    BOOL             [reduce using rule 3 (statementList)]
    IF               [reduce using rule 3 (statementList)]
    FOR              [reduce using rule 3 (statementList)]
    FUNC             [reduce using rule 3 (statementList)]
    LB               [reduce using rule 3 (statementList)]
    $default         reduce using rule 3 (statementList)

    statementList      go to state 81
    statement          go to state 11
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 79

   15 forStatement: FOR IDENTIFIER IN rangeExpression LCB statementList RCB .

    $default  reduce using rule 15 (forStatement)


state 80

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType . LCB statementList RCB

    LCB  shift, and go to state 82


state 81

    2 statementList: statementList . statement
   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList . RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9
    RCB              shift, and go to state 83

    statement          go to state 30
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 82

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB . statementList RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9

    IDENTIFIER       [reduce using rule 3 (statementList)]
    ExpressionValue  [reduce using rule 3 (statementList)]
    INT              [reduce using rule 3 (statementList)]
    DOUBLE           [reduce using rule 3 (statementList)]
    BOOL             [reduce using rule 3 (statementList)]
    IF               [reduce using rule 3 (statementList)]
    FOR              [reduce using rule 3 (statementList)]
    FUNC             [reduce using rule 3 (statementList)]
    LB               [reduce using rule 3 (statementList)]
    $default         reduce using rule 3 (statementList)

    statementList      go to state 84
    statement          go to state 11
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 83

   16 funcDefStatement: FUNC IDENTIFIER LB parameterList RB LCB statementList RCB .

    $default  reduce using rule 16 (funcDefStatement)


state 84

    2 statementList: statementList . statement
   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList . RCB

    IDENTIFIER       shift, and go to state 1
    ExpressionValue  shift, and go to state 2
    INT              shift, and go to state 3
    DOUBLE           shift, and go to state 4
    BOOL             shift, and go to state 5
    IF               shift, and go to state 6
    FOR              shift, and go to state 7
    FUNC             shift, and go to state 8
    LB               shift, and go to state 9
    RCB              shift, and go to state 85

    statement          go to state 30
    assignStatement    go to state 12
    defineStatement    go to state 13
    ifStatement        go to state 14
    forStatement       go to state 15
    funcDefStatement   go to state 16
    funcCallStatement  go to state 17
    expression         go to state 18
    term               go to state 19
    primaryExpression  go to state 20
    dataType           go to state 21


state 85

   17 funcDefStatement: FUNC IDENTIFIER LB parameterDefList RB COLON dataType LCB statementList RCB .

    $default  reduce using rule 17 (funcDefStatement)
